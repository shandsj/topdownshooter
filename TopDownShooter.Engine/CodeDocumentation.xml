<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TopDownShooter.Engine</name>
    </assembly>
    <members>
        <member name="T:TopDownShooter.Engine.Adapters.Camera2DAdapter">
            <summary>
            Provides a default implementation of the <see cref="T:TopDownShooter.Engine.Adapters.ICamera2DAdapter" /> class.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.Camera2DAdapter.#ctor(MonoGame.Extended.Camera2D)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.Adapters.Camera2DAdapter"/> class.
            </summary>
            <param name="camera">The <see cref="T:MonoGame.Extended.Camera2D"/>.</param>
        </member>
        <member name="P:TopDownShooter.Engine.Adapters.Camera2DAdapter.MaximumZoom">
            <summary>
            Gets or sets the maximum zoom.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Adapters.Camera2DAdapter.MinimumZoom">
            <summary>
            Gets or sets the minimum zoom.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Adapters.Camera2DAdapter.Origin">
            <summary>
            Gets or sets the origin.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Adapters.Camera2DAdapter.Position">
            <summary>
            Gets or sets the position.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Adapters.Camera2DAdapter.Rotation">
            <summary>
            Gets or sets the rotation.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Adapters.Camera2DAdapter.Zoom">
            <summary>
            Gets or sets the zoom.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.Camera2DAdapter.Contains(Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Determines if the specified rectangle is contained in the camera.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <returns>The <see cref="T:Microsoft.Xna.Framework.ContainmentType" />.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.Camera2DAdapter.Contains(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Determines if the specified vector is contained in the camera.
            </summary>
            <param name="vector2">The vector.</param>
            <returns>The <see cref="T:Microsoft.Xna.Framework.ContainmentType" />.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.Camera2DAdapter.Contains(Microsoft.Xna.Framework.Point)">
            <summary>
            Determines if the specified point is contained in the camera.
            </summary>
            <param name="point">The point.</param>
            <returns>The <see cref="T:Microsoft.Xna.Framework.ContainmentType" />.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.Camera2DAdapter.GetBoundingFrustum">
            <summary>
            Gets the bounding frustum.
            </summary>
            <returns>The bounding frustum.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.Camera2DAdapter.GetBoundingRectangle">
            <summary>
            Gets the bounding rectangle.
            </summary>
            <returns>The bounding rectangle</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.Camera2DAdapter.GetInverseViewMatrix">
            <summary>
            Gets the inverse view matrix.
            </summary>
            <returns>The inverse view matrix.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.Camera2DAdapter.GetViewMatrix">
            <summary>
            Gets the view matrix.
            </summary>
            <returns>The view matrix.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.Camera2DAdapter.GetViewMatrix(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Gets the view matrix with the specified parallax factor.
            </summary>
            <param name="parallaxFactor">The parallax factor.</param>
            <returns>The view matrix.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.Camera2DAdapter.LookAt(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Instructs the camera to look at the specified location.
            </summary>
            <param name="position">The location.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.Camera2DAdapter.Move(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Instructs the camera to move in the specified direction.
            </summary>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.Camera2DAdapter.Rotate(System.Single)">
            <summary>
            Rotates the camera the specified radians.
            </summary>
            <param name="deltaRadians">The change in radians.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.Camera2DAdapter.ScreenToWorld(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Converts the specified screen position to world coordinates.
            </summary>
            <param name="screenPosition">The screen position.</param>
            <returns>The converted world coordinates.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.Camera2DAdapter.ScreenToWorld(System.Single,System.Single)">
            <summary>
            Converts the specified screen position to world coordinates.
            </summary>
            <param name="x">The x screen coordinate.</param>
            <param name="y">The y screen coordinate.</param>
            <returns>The converted world coordinates.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.Camera2DAdapter.WorldToScreen(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Converts the specified world position to screen coordinates.
            </summary>
            <param name="worldPosition">The world position.</param>
            <returns>The converted screen coordinates.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.Camera2DAdapter.WorldToScreen(System.Single,System.Single)">
            <summary>
            Converts the specified world position to screen coordinates.
            </summary>
            <param name="x">The x world coordinate.</param>
            <param name="y">The y world coordinate.</param>
            <returns>The converted screen coordinates.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.Camera2DAdapter.ZoomIn(System.Single)">
            <summary>
            Zooms in the camera the specified change.
            </summary>
            <param name="deltaZoom">The change in zoom level.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.Camera2DAdapter.ZoomOut(System.Single)">
            <summary>
            Zooms out the camera the specified change.
            </summary>
            <param name="deltaZoom">The change in zoom level.</param>
        </member>
        <member name="T:TopDownShooter.Engine.Adapters.ContentManagerAdapter">
            <summary>
            Defines an adapter for the <see cref="T:Microsoft.Xna.Framework.Content.ContentManager" /> class.
            </summary>
        </member>
        <member name="F:TopDownShooter.Engine.Adapters.ContentManagerAdapter.content">
            <summary>
            The <see cref="T:Microsoft.Xna.Framework.Content.ContentManager" />.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.ContentManagerAdapter.#ctor(Microsoft.Xna.Framework.Content.ContentManager)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.Adapters.ContentManagerAdapter" /> class.
            </summary>
            <param name="content">
            The <see cref="T:Microsoft.Xna.Framework.Content.ContentManager" />.
            </param>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.ContentManagerAdapter.Load``1(System.String)">
            <summary>
            Loads an asset from the specified asset name.
            </summary>
            <typeparam name="T">The type of the asset to load.</typeparam>
            <param name="assetName">The asset name.</param>
            <returns>The loaded asset.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.ContentManagerAdapter.Unload">
            <summary>
            Unloads all loaded content from the content manager.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.Adapters.GamePadAdapter">
            <summary>
            Provides a default implementation of the <see cref="T:TopDownShooter.Engine.Adapters.IGamePadAdapter" /> interface.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.GamePadAdapter.GetState(Microsoft.Xna.Framework.PlayerIndex)">
            <summary>
            Gets the current state of a game pad controller with an independent axes dead zone.
            </summary>
            <param name="playerIndex">Player index for the controller you want to query.</param>
            <returns>The state of the controller.</returns>
        </member>
        <member name="T:TopDownShooter.Engine.Adapters.ICamera2DAdapter">
            <summary>
            Defines an interface for a camera.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Adapters.ICamera2DAdapter.MaximumZoom">
            <summary>
            Gets or sets the maximum zoom.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Adapters.ICamera2DAdapter.MinimumZoom">
            <summary>
            Gets or sets the minimum zoom.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Adapters.ICamera2DAdapter.Origin">
            <summary>
            Gets or sets the origin.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Adapters.ICamera2DAdapter.Position">
            <summary>
            Gets or sets the position.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Adapters.ICamera2DAdapter.Rotation">
            <summary>
            Gets or sets the rotation.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Adapters.ICamera2DAdapter.Zoom">
            <summary>
            Gets or sets the zoom.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.ICamera2DAdapter.Contains(Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Determines if the specified rectangle is contained in the camera.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <returns>The <see cref="T:Microsoft.Xna.Framework.ContainmentType"/>.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.ICamera2DAdapter.Contains(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Determines if the specified vector is contained in the camera.
            </summary>
            <param name="vector2">The vector.</param>
            <returns>The <see cref="T:Microsoft.Xna.Framework.ContainmentType"/>.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.ICamera2DAdapter.Contains(Microsoft.Xna.Framework.Point)">
            <summary>
            Determines if the specified point is contained in the camera.
            </summary>
            <param name="point">The point.</param>
            <returns>The <see cref="T:Microsoft.Xna.Framework.ContainmentType"/>.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.ICamera2DAdapter.GetBoundingFrustum">
            <summary>
            Gets the bounding frustum.
            </summary>
            <returns>The bounding frustum.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.ICamera2DAdapter.GetBoundingRectangle">
            <summary>
            Gets the bounding rectangle.
            </summary>
            <returns>The bounding rectangle.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.ICamera2DAdapter.GetInverseViewMatrix">
            <summary>
            Gets the inverse view matrix.
            </summary>
            <returns>The inverse view matrix.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.ICamera2DAdapter.GetViewMatrix">
            <summary>
            Gets the view matrix.
            </summary>
            <returns>The view matrix.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.ICamera2DAdapter.GetViewMatrix(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Gets the view matrix with the specified parallax factor.
            </summary>
            <param name="parallaxFactor">The parallax factor.</param>
            <returns>The view matrix.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.ICamera2DAdapter.LookAt(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Instructs the camera to look at the specified location.
            </summary>
            <param name="position">The location.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.ICamera2DAdapter.Move(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Instructs the camera to move in the specified direction.
            </summary>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.ICamera2DAdapter.Rotate(System.Single)">
            <summary>
            Rotates the camera the specified radians.
            </summary>
            <param name="deltaRadians">The change in radians.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.ICamera2DAdapter.ScreenToWorld(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Converts the specified screen position to world coordinates.
            </summary>
            <param name="screenPosition">The screen position.</param>
            <returns>The converted world coordinates.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.ICamera2DAdapter.ScreenToWorld(System.Single,System.Single)">
            <summary>
            Converts the specified screen position to world coordinates.
            </summary>
            <param name="x">The x screen coordinate.</param>
            <param name="y">The y screen coordinate.</param>
            <returns>The converted world coordinates.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.ICamera2DAdapter.WorldToScreen(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Converts the specified world position to screen coordinates.
            </summary>
            <param name="worldPosition">The world position.</param>
            <returns>The converted screen coordinates.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.ICamera2DAdapter.WorldToScreen(System.Single,System.Single)">
            <summary>
            Converts the specified world position to screen coordinates.
            </summary>
            <param name="x">The x world coordinate.</param>
            <param name="y">The y world coordinate.</param>
            <returns>The converted screen coordinates.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.ICamera2DAdapter.ZoomIn(System.Single)">
            <summary>
            Zooms in the camera the specified change.
            </summary>
            <param name="deltaZoom">The change in zoom level.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.ICamera2DAdapter.ZoomOut(System.Single)">
            <summary>
            Zooms out the camera the specified change.
            </summary>
            <param name="deltaZoom">The change in zoom level.</param>
        </member>
        <member name="T:TopDownShooter.Engine.Adapters.IContentManagerAdapter">
            <summary>
            Defines an interface for adapting <see cref="T:Microsoft.Xna.Framework.Content.ContentManager" />.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.IContentManagerAdapter.Load``1(System.String)">
            <summary>
            Loads an asset from the specified asset name.
            </summary>
            <typeparam name="T">The type of the asset to load.</typeparam>
            <param name="assetName">The asset name.</param>
            <returns>The loaded asset.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.IContentManagerAdapter.Unload">
            <summary>
            Unloads all loaded content from the content manager.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.Adapters.IGamePadAdapter">
            <summary>
            Defines an interface for a game pad adapter.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.IGamePadAdapter.GetState(Microsoft.Xna.Framework.PlayerIndex)">
            <summary>
            Gets the current state of a game pad controller with an independent axes dead zone.
            </summary>
            <param name="playerIndex">Player index for the controller you want to query.</param>
            <returns>The state of the controller.</returns>
        </member>
        <member name="T:TopDownShooter.Engine.Adapters.IKeyboardAdapter">
            <summary>
            Defines an interface for a keyboard adapter.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.IKeyboardAdapter.GetState">
            <summary>
            Returns the current keyboard state.
            </summary>
            <returns>The current keyboard state.</returns>
        </member>
        <member name="T:TopDownShooter.Engine.Adapters.IMouseAdapter">
            <summary>
            Defines a mouse adapter interface.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.IMouseAdapter.GetState">
            <summary>
            Gets mouse state information that includes position and button presses for the primary window
            </summary>
            <returns>The current state of the mouse.</returns>
        </member>
        <member name="T:TopDownShooter.Engine.Adapters.ISpriteBatchAdapter">
            <summary>
            Defines an interface for adapting <see cref="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" />.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Adapters.ISpriteBatchAdapter.GraphicsDevice">
            <summary>
            Gets the <see cref="P:TopDownShooter.Engine.Adapters.ISpriteBatchAdapter.GraphicsDevice"/> associated with this
            <see cref="T:TopDownShooter.Engine.Adapters.SpriteBatchAdapter"/>
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.ISpriteBatchAdapter.Begin(Microsoft.Xna.Framework.Graphics.SpriteSortMode,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Graphics.DepthStencilState,Microsoft.Xna.Framework.Graphics.RasterizerState,Microsoft.Xna.Framework.Graphics.Effect,System.Nullable{Microsoft.Xna.Framework.Matrix})">
            <summary>
            Begins a new sprite and text batch with the specified render state.
            </summary>
            <param name="sortMode">
            The drawing order for sprite and text drawing. <see cref="F:Microsoft.Xna.Framework.Graphics.SpriteSortMode.Deferred" /> by default.
            </param>
            <param name="blendState">
            State of the blending. Uses Microsoft.Xna.Framework.Graphics.BlendState.AlphaBlend if null.
            </param>
            <param name="samplerState">
            State of the sampler. Uses Microsoft.Xna.Framework.Graphics.SamplerState.LinearClamp if null.
            </param>
            <param name="depthStencilState">
            State of the depth-stencil buffer. Uses Microsoft.Xna.Framework.Graphics.DepthStencilState.None if null.
            </param>
            <param name="rasterizerState">
            State of the rasterization. Uses Microsoft.Xna.Framework.Graphics.RasterizerState.CullCounterClockwise if null.
            </param>
            <param name="effect">
            A custom Microsoft.Xna.Framework.Graphics.Effect to override the default sprite effect. Uses default sprite effect if null.
            </param>
            <param name="transformMatrix">
            An optional matrix used to transform the sprite geometry. Uses Microsoft.Xna.Framework.Matrix.Identity if null.
            </param>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.ISpriteBatchAdapter.Draw(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Rectangle},Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)">
            <summary>
            Submit a sprite for drawing in the current batch.
            </summary>
            <param name="texture">A texture.</param>
            <param name="position">The drawing location on screen.</param>
            <param name="sourceRectangle">An optional region on the texture which will be rendered. If null - draws full texture.</param>
            <param name="color">A color mask.</param>
            <param name="rotation">The rotation of this sprite.</param>
            <param name="origin">Center of the rotation. 0,0 by default.</param>
            <param name="scale">A scaling of this sprite.</param>
            <param name="effects">Modifications for drawing. Can be combined.</param>
            <param name="layerDepth">A depth of the layer of this sprite.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.ISpriteBatchAdapter.Draw(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Submit a sprite for drawing in the current batch.
            </summary>
            <param name="texture">A texture.</param>
            <param name="position">The drawing location on screen.</param>
            <param name="color">A color mask.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.ISpriteBatchAdapter.Draw(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color)">
            <summary>
            Submit a sprite for drawing in the current batch.
            </summary>
            <param name="texture">A texture.</param>
            <param name="rectangle">The rectangle to use.</param>
            <param name="color">A color mask.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.ISpriteBatchAdapter.DrawString(Microsoft.Xna.Framework.Graphics.SpriteFont,System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Draws a string of text in the current batch.
            </summary>
            <param name="font">The <see cref="T:Microsoft.Xna.Framework.Graphics.SpriteFont"/> to use.</param>
            <param name="text">The text to render.</param>
            <param name="position">The position to render at.</param>
            <param name="color">The color to render the text.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.ISpriteBatchAdapter.End">
            <summary>
            Flushes all batched text and sprites to the screen.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.ISpriteBatchAdapter.DrawRectangle(MonoGame.Extended.Shapes.RectangleF,Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Draws the specified rectangle in the current batch.
            </summary>
            <param name="rectangle">The <see cref="T:MonoGame.Extended.Shapes.RectangleF"/> to render.</param>
            <param name="color">The color.</param>
            <param name="thickness">The thickness.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.ISpriteBatchAdapter.FillRectangle(MonoGame.Extended.Shapes.RectangleF,Microsoft.Xna.Framework.Color)">
            <summary>
            Draws and fills the specified rectangle in the current batch.
            </summary>
            <param name="rectangle">The <see cref="T:MonoGame.Extended.Shapes.RectangleF"/> to render.</param>
            <param name="color">The color.</param>
        </member>
        <member name="T:TopDownShooter.Engine.Adapters.ITmxMapAdapter">
            <summary>
            Defines an adapter interface for a <see cref="T:TiledSharp.TmxMap" />.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Adapters.ITmxMapAdapter.Layers">
            <summary>
            Gets the collection of layers.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Adapters.ITmxMapAdapter.TileHeight">
            <summary>
            Gets the height of the tiles.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Adapters.ITmxMapAdapter.Tilesets">
            <summary>
            Gets the collection of tilesets.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Adapters.ITmxMapAdapter.TileWidth">
            <summary>
            Gets the width of the tiles.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.Adapters.KeyboardAdapter">
            <summary>
            Provides a default implementation of the <see cref="T:TopDownShooter.Engine.Adapters.IKeyboardAdapter" /> interface.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.KeyboardAdapter.GetState">
            <summary>
            Returns the current keyboard state.
            </summary>
            <returns>The current keyboard state.</returns>
        </member>
        <member name="T:TopDownShooter.Engine.Adapters.MouseAdapter">
            <summary>
            Provides a default implementation of the <see cref="T:TopDownShooter.Engine.Adapters.IMouseAdapter" /> interface.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.MouseAdapter.GetState">
            <summary>
            Gets mouse state information that includes position and button presses for the primary window
            </summary>
            <returns>The current state of the mouse.</returns>
        </member>
        <member name="T:TopDownShooter.Engine.Adapters.SpriteBatchAdapter">
            <summary>
            Defines an adapter for <see cref="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" />.
            </summary>
        </member>
        <member name="F:TopDownShooter.Engine.Adapters.SpriteBatchAdapter.spriteBatch">
            <summary>
            The <see cref="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" />.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.SpriteBatchAdapter.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.Adapters.SpriteBatchAdapter" /> class.
            </summary>
            <param name="spriteBatch">
            The sprite batch being adapted.
            </param>
        </member>
        <member name="P:TopDownShooter.Engine.Adapters.SpriteBatchAdapter.GraphicsDevice">
            <summary>
            Gets the <see cref="P:TopDownShooter.Engine.Adapters.SpriteBatchAdapter.GraphicsDevice"/> associated with this
            <see cref="T:TopDownShooter.Engine.Adapters.SpriteBatchAdapter"/>
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.SpriteBatchAdapter.Begin(Microsoft.Xna.Framework.Graphics.SpriteSortMode,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Graphics.DepthStencilState,Microsoft.Xna.Framework.Graphics.RasterizerState,Microsoft.Xna.Framework.Graphics.Effect,System.Nullable{Microsoft.Xna.Framework.Matrix})">
            <summary>
            Begins a new sprite and text batch with the specified render state.
            </summary>
            <param name="sortMode">
            The drawing order for sprite and text drawing. <see cref="F:Microsoft.Xna.Framework.Graphics.SpriteSortMode.Deferred" /> by default.
            </param>
            <param name="blendState">
            State of the blending. Uses Microsoft.Xna.Framework.Graphics.BlendState.AlphaBlend if null.
            </param>
            <param name="samplerState">
            State of the sampler. Uses Microsoft.Xna.Framework.Graphics.SamplerState.LinearClamp if null.
            </param>
            <param name="depthStencilState">
            State of the depth-stencil buffer. Uses Microsoft.Xna.Framework.Graphics.DepthStencilState.None if null.
            </param>
            <param name="rasterizerState">
            State of the rasterization. Uses Microsoft.Xna.Framework.Graphics.RasterizerState.CullCounterClockwise if null.
            </param>
            <param name="effect">
            A custom Microsoft.Xna.Framework.Graphics.Effect to override the default sprite effect. Uses default sprite effect if null.
            </param>
            <param name="transformMatrix">
            An optional matrix used to transform the sprite geometry. Uses Microsoft.Xna.Framework.Matrix.Identity if null.
            </param>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.SpriteBatchAdapter.Draw(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Submit a sprite for drawing in the current batch.
            </summary>
            <param name="texture">A texture.</param>
            <param name="position">The drawing location on screen.</param>
            <param name="color">A color mask.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.SpriteBatchAdapter.Draw(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color)">
            <summary>
            Submit a sprite for drawing in the current batch.
            </summary>
            <param name="texture">A texture.</param>
            <param name="rectangle">The rectangle to use.</param>
            <param name="color">A color mask.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.SpriteBatchAdapter.DrawString(Microsoft.Xna.Framework.Graphics.SpriteFont,System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Draws a string of text in the current batch.
            </summary>
            <param name="font">The <see cref="T:Microsoft.Xna.Framework.Graphics.SpriteFont"/> to use.</param>
            <param name="text">The text to render.</param>
            <param name="position">The position to render at.</param>
            <param name="color">The color to render the text.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.SpriteBatchAdapter.Draw(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Rectangle},Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)">
            <summary>
            Submit a sprite for drawing in the current batch.
            </summary>
            <param name="texture">A texture.</param>
            <param name="position">The drawing location on screen.</param>
            <param name="sourceRectangle">An optional region on the texture which will be rendered. If null - draws full texture.</param>
            <param name="color">A color mask.</param>
            <param name="rotation">The rotation of this sprite.</param>
            <param name="origin">Center of the rotation. 0,0 by default.</param>
            <param name="scale">A scaling of this sprite.</param>
            <param name="effects">Modifications for drawing. Can be combined.</param>
            <param name="layerDepth">A depth of the layer of this sprite.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.SpriteBatchAdapter.DrawRectangle(MonoGame.Extended.Shapes.RectangleF,Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Draws the specified rectangle in the current batch.
            </summary>
            <param name="rectangle">The <see cref="T:MonoGame.Extended.Shapes.RectangleF"/> to render.</param>
            <param name="color">The color.</param>
            <param name="thickness">The thickness.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.SpriteBatchAdapter.FillRectangle(MonoGame.Extended.Shapes.RectangleF,Microsoft.Xna.Framework.Color)">
            <summary>
            Draws and fills the specified rectangle in the current batch.
            </summary>
            <param name="rectangle">The <see cref="T:MonoGame.Extended.Shapes.RectangleF"/> to render.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.SpriteBatchAdapter.End">
            <summary>
            Flushes all batched text and sprites to the screen.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.Adapters.TmxMapAdapter">
            <summary>
            Provides a default implementation of the <see cref="T:TopDownShooter.Engine.Adapters.ITmxMapAdapter" /> interface.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Adapters.TmxMapAdapter.#ctor(TiledSharp.TmxMap)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.Adapters.TmxMapAdapter" /> class.
            </summary>
            <param name="map">The <see cref="T:TiledSharp.TmxMap" /> to adapt.</param>
        </member>
        <member name="P:TopDownShooter.Engine.Adapters.TmxMapAdapter.Layers">
            <summary>
            Gets the collection of layers.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Adapters.TmxMapAdapter.TileHeight">
            <summary>
            Gets the height of the tiles.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Adapters.TmxMapAdapter.Tilesets">
            <summary>
            Gets the collection of tilesets.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Adapters.TmxMapAdapter.TileWidth">
            <summary>
            Gets the width of the tiles.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.AnimationComponent">
            <summary>
            Defines an animation class.
            </summary>
        </member>
        <member name="F:TopDownShooter.Engine.AnimationComponent.assetName">
            <summary>
            The asset name used to load content.
            </summary>
        </member>
        <member name="F:TopDownShooter.Engine.AnimationComponent.texture">
            <summary>
            The texture that contains the frames.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.AnimationComponent.#ctor(System.String,System.String,TopDownShooter.Engine.FrameProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.AnimationComponent" /> class.
            </summary>
            <param name="label">The label of the animation.</param>
            <param name="assetName">The asset name used to load content.</param>
            <param name="frameProperties">The <see cref="P:TopDownShooter.Engine.AnimationComponent.FrameProperties" /> for this <see cref="T:TopDownShooter.Engine.AnimationComponent" />.</param>
        </member>
        <member name="P:TopDownShooter.Engine.AnimationComponent.FrameIndex">
            <summary>
            Gets the current frame index.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.AnimationComponent.FrameProperties">
            <summary>
            Gets the <see cref="P:TopDownShooter.Engine.AnimationComponent.FrameProperties" />  for this <see cref="T:TopDownShooter.Engine.AnimationComponent" />.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.AnimationComponent.IsAnimating">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:TopDownShooter.Engine.AnimationComponent" /> is animating.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.AnimationComponent.IsLooping">
            <summary>
            Gets or sets a value indicating whether to loop the <see cref="T:TopDownShooter.Engine.AnimationComponent" />.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.AnimationComponent.IsRendered">
            <summary>
            Gets or sets a value indicating whether to render this animation component.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.AnimationComponent.Label">
            <summary>
            Gets the label of the animation.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.AnimationComponent.Rotation">
            <summary>
            Gets or sets the rotation for this <see cref="T:TopDownShooter.Engine.AnimationComponent" />.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.AnimationComponent.Scale">
            <summary>
            Gets or sets the scale for this <see cref="T:TopDownShooter.Engine.AnimationComponent" />.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.AnimationComponent.SpriteEffect">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Xna.Framework.Graphics.SpriteEffects" /> for this <see cref="T:TopDownShooter.Engine.AnimationComponent" />.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.AnimationComponent.Draw(TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.Adapters.ICamera2DAdapter,TopDownShooter.Engine.Adapters.ISpriteBatchAdapter,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="camera">The <see cref="T:TopDownShooter.Engine.Adapters.ICamera2DAdapter"/>.</param>
            <param name="spriteBatch">The sprite batch adapter.</param>
            <param name="time">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.AnimationComponent.Initialize">
            <summary>
            Allows the game to perform any initialization it needs to before starting to run.
            This is where it can query for any required services and load any non-graphic
            related content.  Calling base.Initialize will enumerate through any components
            and initialize them as well.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.AnimationComponent.Destroy">
            <summary>
            Destroys the component.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.AnimationComponent.LoadContent(TopDownShooter.Engine.Adapters.IContentManagerAdapter)">
            <summary>
            Loads the content of this <see cref="T:TopDownShooter.Engine.AnimationComponent" />.
            </summary>
            <param name="contentManager">
            The <see cref="T:TopDownShooter.Engine.Adapters.IContentManagerAdapter" />.
            </param>
        </member>
        <member name="M:TopDownShooter.Engine.AnimationComponent.ReceiveMessage(TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.ComponentMessage,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Receives a message.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="message">The message object.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.AnimationComponent.Reset">
            <summary>
            Resets the <see cref="T:TopDownShooter.Engine.AnimationComponent" />.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.AnimationComponent.Update(TopDownShooter.Engine.IGameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object to update.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="T:TopDownShooter.Engine.AnimationComponentManager">
            <summary>
            Implementation for the <see cref="T:TopDownShooter.Engine.IAnimationComponentManager"/>
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.AnimationComponentManager.#ctor(System.Collections.Generic.IEnumerable{TopDownShooter.Engine.IAnimationComponent})">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.AnimationComponentManager"/> class.
            </summary>
            <param name="animationComponents">The collection of <see cref="T:TopDownShooter.Engine.IAnimationComponent"/>
            for this manager to manage</param>
        </member>
        <member name="M:TopDownShooter.Engine.AnimationComponentManager.#ctor(TopDownShooter.Engine.IAnimationComponent[])">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.AnimationComponentManager"/> class.
            </summary>
            <param name="animationComponents">The collection of <see cref="T:TopDownShooter.Engine.IAnimationComponent"/>
            for this manager to manage</param>
        </member>
        <member name="P:TopDownShooter.Engine.AnimationComponentManager.FrameProperties">
            <summary>
            Gets the current animations <see cref="P:TopDownShooter.Engine.AnimationComponentManager.FrameProperties"/>
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.AnimationComponentManager.Draw(TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.Adapters.ICamera2DAdapter,TopDownShooter.Engine.Adapters.ISpriteBatchAdapter,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="camera">The <see cref="T:TopDownShooter.Engine.Adapters.ICamera2DAdapter"/>.</param>
            <param name="spriteBatch">The sprite batch adapter.</param>
            <param name="time">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.AnimationComponentManager.LoadContent(TopDownShooter.Engine.Adapters.IContentManagerAdapter)">
            <summary>
            Loads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.AnimationComponentManager.Initialize">
            <summary>
            Initializes the component.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.AnimationComponentManager.Destroy">
            <summary>
            Destroys the component.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.AnimationComponentManager.Play(System.String,System.Boolean)">
            <summary>
            Plays an animation with the given <paramref name="animationLabel"/>
            </summary>
            <param name="animationLabel">Labeled animation to play.</param>
            <param name="isLooping">Toggles whether this animation will play in loop mode</param>
        </member>
        <member name="M:TopDownShooter.Engine.AnimationComponentManager.ReceiveMessage(TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.ComponentMessage,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Receives a message.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="message">The message object.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.AnimationComponentManager.Stop">
            <summary>
            Stops the currently playing animation.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.AnimationComponentManager.Update(TopDownShooter.Engine.IGameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object to update.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.AnimationComponentManager.StopAndUnloadCurrentAnimation">
            <summary>
            Helper method to stop and unload the current animation
            that is loaded.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.Collisions.ColliderComponentBase">
            <summary>
            Defines a rigid body component that will respond to collisions with other rigid bodies.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Collisions.ColliderComponentBase.#ctor(System.Int32,TopDownShooter.Engine.Collisions.ICollisionSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.Collisions.ColliderComponentBase" /> class.
            </summary>
            <param name="gameObjectId">The parent game object identifier.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem"/>.</param>
        </member>
        <member name="P:TopDownShooter.Engine.Collisions.ColliderComponentBase.GameObjectId">
            <summary>
            Gets the parent game object identifer.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Collisions.ColliderComponentBase.CollisionSystem">
            <summary>
            Gets the <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" />.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Collisions.ColliderComponentBase.Draw(TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.Adapters.ICamera2DAdapter,TopDownShooter.Engine.Adapters.ISpriteBatchAdapter,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="camera">The <see cref="T:TopDownShooter.Engine.Adapters.ICamera2DAdapter"/>.</param>
            <param name="spriteBatch">The sprite batch adapter.</param>
            <param name="time">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Collisions.ColliderComponentBase.LoadContent(TopDownShooter.Engine.Adapters.IContentManagerAdapter)">
            <summary>
            Loads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Collisions.ColliderComponentBase.Initialize">
            <summary>
            Initializes the component.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Collisions.ColliderComponentBase.Destroy">
            <summary>
            Destroys the component.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Collisions.ColliderComponentBase.ReceiveMessage(TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.ComponentMessage,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Receives a message.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="message">The message object.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Collisions.ColliderComponentBase.Update(TopDownShooter.Engine.IGameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object to update.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Collisions.ColliderComponentBase.Collide(TopDownShooter.Engine.Collisions.IColliderComponent,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Performs a collision with the specified <see cref="T:TopDownShooter.Engine.Collisions.IColliderComponent" />.
            </summary>
            <param name="other">The other collider component.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Collisions.ColliderComponentBase.IsCollision(TopDownShooter.Engine.Collisions.IColliderComponent)">
            <summary>
            Determines a collision occured with the specified <see cref="T:TopDownShooter.Engine.Collisions.IColliderComponent" />.
            </summary>
            <param name="other">The rigid body to check for a collision.</param>
            <returns>TTrue if a collision occured, false otherwise.</returns>
        </member>
        <member name="T:TopDownShooter.Engine.Collisions.CollisionSystem">
            <summary>
            Defines a system to handle collisions.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Collisions.CollisionSystem.NextGameObjectId">
            <summary>
            Gets or sets the next available game object identifier.
            </summary>
            TODO: refactor this and put it somewhere else.
        </member>
        <member name="P:TopDownShooter.Engine.Collisions.CollisionSystem.Colliders">
            <summary>
            Gets the collection of <see cref="T:TopDownShooter.Engine.Collisions.IColliderComponent"/> objects registered with this <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem"/>.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Collisions.CollisionSystem.GameObjects">
            <summary>
            Gets the collection of <see cref="T:TopDownShooter.Engine.IGameObject"/> objects registered with this <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem"/>.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Collisions.CollisionSystem.CheckCollisions(TopDownShooter.Engine.Collisions.IColliderComponent,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Checks the collisions for the specified <see cref="T:TopDownShooter.Engine.Collisions.IColliderComponent" />.
            </summary>
            <param name="collider">The rigid body.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Collisions.CollisionSystem.GetGameObject(System.Int32)">
            <summary>
            Gets the <see cref="T:TopDownShooter.Engine.IGameObject" /> with the specified identifer.
            </summary>
            <param name="id">Game object identifier.</param>
            <returns>The <see cref="T:TopDownShooter.Engine.IGameObject" />.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Collisions.CollisionSystem.Register(System.Int32,TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.Collisions.IColliderComponent)">
            <summary>
            Registers the specifieid <see cref="T:TopDownShooter.Engine.IGameObject" /> and <see cref="T:TopDownShooter.Engine.Collisions.IColliderComponent" /> with the specified identifier.
            </summary>
            <param name="id">The identifier of the game object.</param>
            <param name="gameObject">The game object.</param>
            <param name="collider">The collider component.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Collisions.CollisionSystem.Unregister(System.Int32)">
            <summary>
            Unregisters the game object and collider with the specified identifier.
            </summary>
            <param name="id">The identifier of the game object.</param>
        </member>
        <member name="T:TopDownShooter.Engine.Collisions.IColliderComponent">
            <summary>
            Defines an interface for a collider component.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Collisions.IColliderComponent.GameObjectId">
            <summary>
            Gets the parent game object identifer.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Collisions.IColliderComponent.Collide(TopDownShooter.Engine.Collisions.IColliderComponent,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Performs a collision with the specified <see cref="T:TopDownShooter.Engine.Collisions.IColliderComponent" />.
            </summary>
            <param name="other">The other collider component.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Collisions.IColliderComponent.IsCollision(TopDownShooter.Engine.Collisions.IColliderComponent)">
            <summary>
            Determines a collision occured with the specified <see cref="T:TopDownShooter.Engine.Collisions.IColliderComponent" />.
            </summary>
            <param name="other">The rigid body to check for a collision.</param>
            <returns>TTrue if a collision occured, false otherwise.</returns>
        </member>
        <member name="T:TopDownShooter.Engine.Collisions.ICollisionSystem">
            <summary>
            Defines an interface for providing game object lookups.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Collisions.ICollisionSystem.Colliders">
            <summary>
            Gets the collection of <see cref="T:TopDownShooter.Engine.Collisions.IColliderComponent" /> objects registered with this <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" />.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Collisions.ICollisionSystem.GameObjects">
            <summary>
            Gets the collection of <see cref="T:TopDownShooter.Engine.IGameObject" /> objects registered with this <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" />.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Collisions.ICollisionSystem.CheckCollisions(TopDownShooter.Engine.Collisions.IColliderComponent,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Checks the collisions for the specified <see cref="T:TopDownShooter.Engine.Collisions.IColliderComponent" />.
            </summary>
            <param name="collider">The rigid body.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Collisions.ICollisionSystem.GetGameObject(System.Int32)">
            <summary>
            Gets the <see cref="T:TopDownShooter.Engine.IGameObject" /> with the specified identifer.
            </summary>
            <param name="id">Game object identifier.</param>
            <returns>The <see cref="T:TopDownShooter.Engine.IGameObject" />.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Collisions.ICollisionSystem.Register(System.Int32,TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.Collisions.IColliderComponent)">
            <summary>
            Registers the specifieid <see cref="T:TopDownShooter.Engine.IGameObject" /> and <see cref="T:TopDownShooter.Engine.Collisions.IColliderComponent" /> with the specified identifier.
            </summary>
            <param name="id">The identifier of the game object.</param>
            <param name="gameObject">The game object.</param>
            <param name="collider">The collider component.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Collisions.ICollisionSystem.Unregister(System.Int32)">
            <summary>
            Unregisters the game object and collider with the specified identifier.
            </summary>
            <param name="id">The identifier of the game object.</param>
        </member>
        <member name="T:TopDownShooter.Engine.Collisions.SimpleColliderComponent">
            <summary>
            Provides a simple collider component that does bounds checking for collision detection.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Collisions.SimpleColliderComponent.#ctor(System.Int32,TopDownShooter.Engine.Collisions.ICollisionSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.Collisions.SimpleColliderComponent" /> class.
            </summary>
            <param name="gameObjectId">The parent game object identifier.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" />.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Collisions.SimpleColliderComponent.Collide(TopDownShooter.Engine.Collisions.IColliderComponent,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Performs a collision with the specified <see cref="T:TopDownShooter.Engine.Collisions.IColliderComponent" />.
            </summary>
            <param name="other">The other collider component.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Collisions.SimpleColliderComponent.IsCollision(TopDownShooter.Engine.Collisions.IColliderComponent)">
            <summary>
            Determines a collision occured with the specified <see cref="T:TopDownShooter.Engine.Collisions.IColliderComponent" />.
            </summary>
            <param name="other">The rigid body to check for a collision.</param>
            <returns>TTrue if a collision occured, false otherwise.</returns>
        </member>
        <member name="T:TopDownShooter.Engine.CompletedEventArgs">
            <summary>
            Contains event data for a completed operation.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.CompletedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.CompletedEventArgs" /> class.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.CompletedEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.CompletedEventArgs" /> class.
            </summary>
            <param name="data">The data associated with the completed event.</param>
        </member>
        <member name="P:TopDownShooter.Engine.CompletedEventArgs.Data">
            <summary>
            Gets the data associated with the completed event.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.ComponentMessage">
            <summary>
            Message object that can detail what type of message it is
            and provide further optional details.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.ComponentMessage.#ctor(TopDownShooter.Engine.MessageType,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.ComponentMessage"/> class.
            </summary>
            <param name="messageType">Message Type</param>
            <param name="messageDetails">Optional message details</param>
        </member>
        <member name="P:TopDownShooter.Engine.ComponentMessage.MessageType">
            <summary>
            Gets the MessageType
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.ComponentMessage.MessageDetails">
            <summary>
            Gets the optional details object that can
            be used to detail more about the message.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.Controllers.HumanInputControllerComponent">
            <summary>
            Herds Inputs...
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.HumanInputControllerComponent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.Controllers.HumanInputControllerComponent" /> class.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.HumanInputControllerComponent.#ctor(TopDownShooter.Engine.Adapters.IKeyboardAdapter,TopDownShooter.Engine.Adapters.IMouseAdapter,TopDownShooter.Engine.Adapters.IGamePadAdapter)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.Controllers.HumanInputControllerComponent" /> class.
            Creates a new <see cref="T:TopDownShooter.Engine.Controllers.HumanInputControllerComponent" /> that can be used to have a simple Composite for managing
            inputs among multiple devices.
            </summary>
            <param name="keyboard">The <see cref="T:TopDownShooter.Engine.Adapters.IKeyboardAdapter" />.</param>
            <param name="mouse">The <see cref="T:TopDownShooter.Engine.Adapters.IMouseAdapter"/>.</param>
            <param name="gamePad">The <see cref="T:TopDownShooter.Engine.Adapters.IGamePadAdapter"/>.</param>
            <remarks>Internal for unit testing.</remarks>
        </member>
        <member name="P:TopDownShooter.Engine.Controllers.HumanInputControllerComponent.Direction">
            <summary>
            Gets the direction vector.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.HumanInputControllerComponent.Destroy">
            <summary>
            Destroys the component.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.HumanInputControllerComponent.Fire">
            <summary>
            Gets a value indicating whether a fire was requested.
            </summary>
            <returns>True if the action was requested; false otherwise.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.HumanInputControllerComponent.Dash">
            <summary>
            Gets a value indicating whether a dash was requested.
            </summary>
            <returns>True if the action was requested; false otherwise.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.HumanInputControllerComponent.Initialize">
            <summary>
            Initializes the component.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.HumanInputControllerComponent.Update(TopDownShooter.Engine.IGameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object to update.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.HumanInputControllerComponent.GetDPadDirectionalVector(Microsoft.Xna.Framework.Input.GamePadDPad)">
            <summary>
            Gets the DPad directional vector.
            </summary>
            <param name="dpad">The <see cref="T:Microsoft.Xna.Framework.Input.GamePadDPad"/>.</param>
            <returns>The directional vector.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.HumanInputControllerComponent.GetKeyboardDirectionalVector(Microsoft.Xna.Framework.Input.KeyboardState)">
            <summary>
            Gets the keyboard directional vector.
            </summary>
            <param name="keyboardState">The <see cref="T:Microsoft.Xna.Framework.Input.KeyboardState"/>.</param>
            <returns>The directional vector.</returns>
        </member>
        <member name="T:TopDownShooter.Engine.Controllers.IInputController">
            <summary>
            Simple Controller for requesting Movements
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Controllers.IInputController.Direction">
            <summary>
            Gets the direction vector.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.IInputController.Fire">
            <summary>
            Gets a value indicating whether a fire was requested.
            </summary>
            <returns>True if the action was requested; false otherwise.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.IInputController.Dash">
            <summary>
            Gets a value indicating whether a dash was requested.
            </summary>
            <returns>True if the action was requested; false otherwise.</returns>
        </member>
        <member name="T:TopDownShooter.Engine.Controllers.InputControllerComponentBase">
            <summary>
            Base implementation for an <see cref="T:TopDownShooter.Engine.Controllers.IInputController" />
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.InputControllerComponentBase.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:TopDownShooter.Engine.Controllers.InputControllerComponentBase" /> class.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Controllers.InputControllerComponentBase.Direction">
            <summary>
            Gets the direction vector.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.InputControllerComponentBase.Destroy">
            <summary>
            Destroys the component.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.InputControllerComponentBase.Dispose">
            <summary>
            Cleans up any resources used during the execution of this class
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.InputControllerComponentBase.Draw(TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.Adapters.ICamera2DAdapter,TopDownShooter.Engine.Adapters.ISpriteBatchAdapter,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="camera">The <see cref="T:TopDownShooter.Engine.Adapters.ICamera2DAdapter"/>.</param>
            <param name="spriteBatch">The sprite batch adapter.</param>
            <param name="time">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.InputControllerComponentBase.Fire">
            <summary>
            Gets a value indicating whether a fire was requested.
            </summary>
            <returns>True if the action was requested; false otherwise.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.InputControllerComponentBase.Dash">
            <summary>
            Gets a value indicating whether a dash was requested.
            </summary>
            <returns>True if the action was requested; false otherwise.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.InputControllerComponentBase.Initialize">
            <summary>
            Initializes the component.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.InputControllerComponentBase.LoadContent(TopDownShooter.Engine.Adapters.IContentManagerAdapter)">
            <summary>
            Loads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.InputControllerComponentBase.ReceiveMessage(TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.ComponentMessage,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Receives a message.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="message">The message object.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.InputControllerComponentBase.Update(TopDownShooter.Engine.IGameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object to update.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.InputControllerComponentBase.UnloadContent(TopDownShooter.Engine.Adapters.IContentManagerAdapter)">
            <summary>
            Unloads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.InputControllerComponentBase.Dispose(System.Boolean)">
            <summary>
            Cleans up any resources used during the execution of this class
            </summary>
            <param name="disposing">Disposing or not?</param>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.InputControllerComponentBase.ManagedDispose">
            <summary>
            Cleans up any managed resources during disposal
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.Controllers.SimpleAiInputControllerComponent">
            <summary>
            Controller for controlling a simple AI.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.SimpleAiInputControllerComponent.#ctor(System.Random)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.Controllers.SimpleAiInputControllerComponent" /> class.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.SimpleAiInputControllerComponent.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:TopDownShooter.Engine.Controllers.SimpleAiInputControllerComponent" /> class.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Controllers.SimpleAiInputControllerComponent.Direction">
            <summary>
            Gets the direction vector.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.SimpleAiInputControllerComponent.Destroy">
            <summary>
            Destroys the component.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.SimpleAiInputControllerComponent.Fire">
            <summary>
            Gets a value indicating whether a fire was requested.
            </summary>
            <returns>True if the action was requested; false otherwise.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.SimpleAiInputControllerComponent.Dash">
            <summary>
            Gets a value indicating whether a dash was requested.
            </summary>
            <returns>True if the action was requested; false otherwise.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.SimpleAiInputControllerComponent.Initialize">
            <summary>
            Initializes the component.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.SimpleAiInputControllerComponent.ManagedDispose">
            <summary>
            Cleans up any resources allocated during execution
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Controllers.SimpleAiInputControllerComponent.SleepRandomly">
            <summary>
            Sleeps a random amount of time between 0 and 1.5 seconds.
            </summary>
            <remarks>No one will get passed this sweet ai!</remarks>
        </member>
        <member name="T:TopDownShooter.Engine.DashComponent">
            <summary>
            Defines a dash component.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.DashComponent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.DashComponent"/> class.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.DashComponent.ActiveTime">
            <summary>
            Gets the amount of time the dash is active.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.DashComponent.CompletedTime">
            <summary>
            Gets the time the last dash was completed.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.DashComponent.CooldownTime">
            <summary>
            Gets the cooldown time.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.DashComponent.SpeedFactor">
            <summary>
            Gets the value affecting the velocity vector during the dash.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.DashComponent.StartedTime">
            <summary>
            Gets the time the last dash started.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.DashComponent.Destroy">
            <summary>
            Destroys the component.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.DashComponent.Draw(TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.Adapters.ICamera2DAdapter,TopDownShooter.Engine.Adapters.ISpriteBatchAdapter,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="camera">The <see cref="T:TopDownShooter.Engine.Adapters.ICamera2DAdapter" />.</param>
            <param name="spriteBatch">The sprite batch adapter.</param>
            <param name="time">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.DashComponent.Initialize">
            <summary>
            Initializes the component.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.DashComponent.LoadContent(TopDownShooter.Engine.Adapters.IContentManagerAdapter)">
            <summary>
            Loads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.DashComponent.ReceiveMessage(TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.ComponentMessage,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Receives a message.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="message">The message object.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.DashComponent.Update(TopDownShooter.Engine.IGameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object to update.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.DashComponent.IsDashing(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Gets a value indicating whether the component is dashing at the specified game time.
            </summary>
            <param name="gameTime">The game time.</param>
            <returns>True if the component is dashing; false otherwise.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.DashComponent.TryStartDash(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Attempts to start a dash at the specified game time.
            </summary>
            <param name="gameTime">The game time.</param>
            <returns>True if the dash successfully started; false otherwise.</returns>
        </member>
        <member name="T:TopDownShooter.Engine.DashStatusRequestMessage">
            <summary>
            Defines a message that requests a dash status of a player.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.DashStatusRequestMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.DashStatusRequestMessage" /> class.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.DashStatusRequestMessage.IsDashing">
            <summary>
            Gets or sets a value indicating whether a dash is in progress.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.DebugComponent">
            <summary>
             Primitive Debug Component, uses the <see cref="P:TopDownShooter.Engine.GameObject.Bounds"/> to place a hollow <see cref="T:Microsoft.Xna.Framework.Rectangle"/>
             around it.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.DebugComponent.#ctor(Microsoft.Xna.Framework.Color,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.DebugComponent"/> class.
            </summary>
            <param name="color">Border color for the bounding box around a given <see cref="T:TopDownShooter.Engine.GameObject"/></param>
            <param name="borderThickness">The thickness for the rectangluar border for a given <see cref="T:TopDownShooter.Engine.GameObject"/></param>
        </member>
        <member name="M:TopDownShooter.Engine.DebugComponent.Draw(TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.Adapters.ICamera2DAdapter,TopDownShooter.Engine.Adapters.ISpriteBatchAdapter,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="camera">The <see cref="T:TopDownShooter.Engine.Adapters.ICamera2DAdapter"/>.</param>
            <param name="spriteBatch">The sprite batch adapter.</param>
            <param name="time">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.DebugComponent.LoadContent(TopDownShooter.Engine.Adapters.IContentManagerAdapter)">
            <summary>
            Loads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.DebugComponent.Initialize">
            <summary>
            Initializes the component.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.DebugComponent.Destroy">
            <summary>
            Destroys the component.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.DebugComponent.ReceiveMessage(TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.ComponentMessage,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Receives a message.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="message">The message object.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.DebugComponent.Update(TopDownShooter.Engine.IGameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object to update.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.DebugComponent.DrawRectangle(TopDownShooter.Engine.Adapters.ISpriteBatchAdapter,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws a hollow rectangle around a provided <see cref="T:Microsoft.Xna.Framework.Rectangle"/>
            </summary>
            <param name="spriteBatch">The sprite batch adapter.</param>
            <param name="area">Area to wrap with a border</param>
        </member>
        <member name="T:TopDownShooter.Engine.Extensions">
            <summary>
            Container for extension methods
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Extensions.RemoveAll``1(System.Collections.Generic.IList{``0},System.Func{``0,System.Boolean})">
            <summary>
            Remove all items from this enumerable that match the given <paramref name="predicate"/>.
            </summary>
            <typeparam name="TType">Type of enumerable</typeparam>
            <param name="list">Enumerable reference</param>
            <param name="predicate">Remove all that match this predicate</param>
        </member>
        <member name="T:TopDownShooter.Engine.GameItem">
            <summary>
            Base implementation for a simple <see cref="T:TopDownShooter.Engine.IGameItem"/>. The primary difference
            between <see cref="T:TopDownShooter.Engine.IGameObject"/> and <see cref="T:TopDownShooter.Engine.IGameItem"/> is that <see cref="T:TopDownShooter.Engine.IGameItem"/>s
            can be placed in <see cref="T:TopDownShooter.Engine.InventoryComponentBase"/>
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.GameItem.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.GameItem" /> class.
            </summary>
            <param name="id">The game object identifier.</param>
        </member>
        <member name="M:TopDownShooter.Engine.GameItem.#ctor(System.Int32,System.Collections.Generic.IEnumerable{TopDownShooter.Engine.IComponent})">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.GameItem" /> class.
            </summary>
            <param name="id">The game object identifier.</param>
            <param name="components">The collection of components.</param>
        </member>
        <member name="P:TopDownShooter.Engine.GameItem.Description">
            <summary>
            Gets a description for this item.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.GameItem.IsPickedUp">
            <summary>
            Gets a value indicating whether this game item has been picked up.
            </summary>
            <remarks>For use when managing a collection of these in the world, which ones
            can be removed from the update and draw loops</remarks>
        </member>
        <member name="M:TopDownShooter.Engine.GameItem.Pickup">
            <summary>
            Should be called when another component will be
            taking ownership of this item.
            </summary>
            <returns><see cref="T:TopDownShooter.Engine.IGameItem"/> reference.</returns>
            <remarks><see cref="T:TopDownShooter.Engine.IGameItem"/> here could be used to return an Inventory friendly
            viewable GameItem here.</remarks>
        </member>
        <member name="T:TopDownShooter.Engine.GameItemFactory">
            <summary>
            Factor that can be used to generate <see cref="T:TopDownShooter.Engine.IGameItem"/>
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.GameItemFactory.SpawnRandomBulletItems(System.Int32,TopDownShooter.Engine.Collisions.ICollisionSystem,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Spawns a random number of <see cref="T:TopDownShooter.Engine.Items.CoinGameItem"/>s
            </summary>
            <param name="count">Number to create</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" />.</param>
            <param name="minX">Minimum X coordinate</param>
            <param name="maxX">Maximum X coordinate</param>
            <param name="minY">Minimum Y coordiante</param>
            <param name="maxY">Maximum Y coordinate</param>
            <returns>Collection of uninitalized <see cref="T:System.Collections.Generic.IEnumerable`1"/></returns>
        </member>
        <member name="M:TopDownShooter.Engine.GameItemFactory.CreateBulletItem(System.Int32,Microsoft.Xna.Framework.Vector2,TopDownShooter.Engine.Collisions.ICollisionSystem)">
            <summary>
            Creates a bullet item game object.
            </summary>
            <param name="id">The game object identifier.</param>
            <param name="position">The position of the game object.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" />.</param>
            <returns>The created bullet item.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.GameItemFactory.SpawnRandomCoinItems(System.Int32,TopDownShooter.Engine.Collisions.ICollisionSystem,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Spawns a random number of <see cref="T:TopDownShooter.Engine.Items.CoinGameItem"/>s
            </summary>
            <param name="count">Number to create</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" />.</param>
            <param name="minX">Minimum X coordinate</param>
            <param name="maxX">Maximum X coordinate</param>
            <param name="minY">Minimum Y coordiante</param>
            <param name="maxY">Maximum Y coordinate</param>
            <returns>Collection of uninitalized <see cref="T:System.Collections.Generic.IEnumerable`1"/></returns>
        </member>
        <member name="M:TopDownShooter.Engine.GameItemFactory.CreateCoinItem(System.Int32,Microsoft.Xna.Framework.Vector2,TopDownShooter.Engine.Collisions.ICollisionSystem)">
            <summary>
            Creates a bullet item game object.
            </summary>
            <param name="id">The game object identifier.</param>
            <param name="position">The position of the game object.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" />.</param>
            <returns>The created bullet item.</returns>
        </member>
        <member name="T:TopDownShooter.Engine.GameObjectFactory">
            <summary>
            Provides an implementation of <see cref="T:TopDownShooter.Engine.IGameObjectFactory" />.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.GameObjectFactory.CreateBulletProjectile(System.Int32,System.Int32,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,TopDownShooter.Engine.Collisions.ICollisionSystem)">
            <summary>
            Creates a bullet projectile game object.
            </summary>
            <param name="id">The game object identifier.</param>
            <param name="parentId">The parent game object identifier.</param>
            <param name="position">The position of the game object.</param>
            <param name="direction">The diretion of the bullet, as a unit vector.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" />.</param>
            <returns>The created bullet projectile.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.GameObjectFactory.CreateBulletProjectile(System.Int32,System.Int32,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,TopDownShooter.Engine.Collisions.ICollisionSystem,System.Collections.Generic.IEnumerable{TopDownShooter.Engine.IComponent})">
            <summary>
            Creates a bullet projectile game object.
            </summary>
            <param name="id">The game object identifier.</param>
            <param name="parentId">The parent game object identifier.</param>
            <param name="position">The position of the game object.</param>
            <param name="direction">The diretion of the bullet, as a unit vector.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" />.</param>
            <param name="components">The collection of components</param>
            <returns>The created bullet projectile.</returns>
        </member>
        <member name="T:TopDownShooter.Engine.IAnimationComponent">
            <summary>
            Defines an interface for an animation component.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IAnimationComponent.FrameIndex">
            <summary>
            Gets the current frame index.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IAnimationComponent.FrameProperties">
            <summary>
            Gets the <see cref="P:TopDownShooter.Engine.IAnimationComponent.FrameProperties" />  for this <see cref="T:TopDownShooter.Engine.AnimationComponent" />.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IAnimationComponent.IsAnimating">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:TopDownShooter.Engine.AnimationComponent" /> is animating.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IAnimationComponent.IsLooping">
            <summary>
            Gets or sets a value indicating whether to loop the <see cref="T:TopDownShooter.Engine.AnimationComponent" />.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IAnimationComponent.IsRendered">
            <summary>
            Gets or sets a value indicating whether to render this animation component.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IAnimationComponent.Label">
            <summary>
            Gets the label of the animation.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IAnimationComponent.Rotation">
            <summary>
            Gets or sets the rotation for this <see cref="T:TopDownShooter.Engine.AnimationComponent" />.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IAnimationComponent.Scale">
            <summary>
            Gets or sets the scale for this <see cref="T:TopDownShooter.Engine.AnimationComponent" />.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IAnimationComponent.SpriteEffect">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Xna.Framework.Graphics.SpriteEffects" /> for this <see cref="T:TopDownShooter.Engine.AnimationComponent" />.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.IAnimationComponent.Reset">
            <summary>
            Resets the <see cref="T:TopDownShooter.Engine.AnimationComponent" />.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.IAnimationComponentManager">
            <summary>
            Interface for managing a collection of <see cref="T:TopDownShooter.Engine.IAnimationComponent"/>
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IAnimationComponentManager.FrameProperties">
            <summary>
            Gets the <see cref="P:TopDownShooter.Engine.IAnimationComponentManager.FrameProperties"/> for the current animation
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.IAnimationComponentManager.Play(System.String,System.Boolean)">
            <summary>
            Plays an animation with the given <paramref name="animationLabel"/>
            </summary>
            <param name="animationLabel">Labeled animation to play.</param>
            <param name="isLooping">Toggles whether this animation will play in loop mode</param>
        </member>
        <member name="M:TopDownShooter.Engine.IAnimationComponentManager.Stop">
            <summary>
            Stops the currently playing animation.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.IComponent">
            <summary>
            Defines an interface for components.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.IComponent.ReceiveMessage(TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.ComponentMessage,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Receives a message.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="message">The message object.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.IComponent.Update(TopDownShooter.Engine.IGameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object to update.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.IComponent.Draw(TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.Adapters.ICamera2DAdapter,TopDownShooter.Engine.Adapters.ISpriteBatchAdapter,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="camera">The <see cref="T:TopDownShooter.Engine.Adapters.ICamera2DAdapter"/>.</param>
            <param name="spriteBatch">The sprite batch adapter.</param>
            <param name="time">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.IComponent.LoadContent(TopDownShooter.Engine.Adapters.IContentManagerAdapter)">
            <summary>
            Loads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.IComponent.Initialize">
            <summary>
            Initializes the component.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.IComponent.Destroy">
            <summary>
            Destroys the component.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.FrameProperties">
            <summary>
            Defines a structure for the frame properties of an <see cref="T:TopDownShooter.Engine.AnimationComponent" />.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.FrameProperties.#ctor(System.Int32,System.Int32,System.TimeSpan,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.FrameProperties"/> struct.
            </summary>
            <param name="width">The width of a frame.</param>
            <param name="height">The height of a frame.</param>
            <param name="duration">The duration of a frame.</param>
            <param name="count">The number of frames in an <see cref="T:TopDownShooter.Engine.AnimationComponent" />.</param>
        </member>
        <member name="P:TopDownShooter.Engine.FrameProperties.Count">
            <summary>
            Gets the number of frames in an <see cref="T:TopDownShooter.Engine.AnimationComponent" />.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.FrameProperties.Duration">
            <summary>
            Gets the duration of a frame.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.FrameProperties.Height">
            <summary>
            Gets the height of a frame.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.FrameProperties.Width">
            <summary>
            Gets the width of a frame.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.GameObject">
            <summary>
            Defines an entity.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.GameObject.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.GameObject" /> class.
            </summary>
            <param name="id">The game object identifier.</param>
        </member>
        <member name="M:TopDownShooter.Engine.GameObject.#ctor(System.Int32,System.Collections.Generic.IEnumerable{TopDownShooter.Engine.IComponent})">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.GameObject" /> class.
            </summary>
            <param name="id">The game object identifier.</param>
            <param name="components">The collection of components.</param>
        </member>
        <member name="P:TopDownShooter.Engine.GameObject.Bounds">
            <summary>
            Gets the bounds of the game object.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.GameObject.Components">
            <summary>
            Gets the collection of components.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.GameObject.Id">
            <summary>
            Gets the identifier for this game object.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.GameObject.Position">
            <summary>
            Gets or sets the position of the entity.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.GameObject.ProjectedPosition">
            <summary>
            Gets the projected position, based off the <see cref="P:TopDownShooter.Engine.IGameObject.Position"/> and the <see cref="P:TopDownShooter.Engine.IGameObject.Velocity"/>.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.GameObject.ProjectedBounds">
            <summary>
            Gets the projected bounds, based off the <see cref="P:TopDownShooter.Engine.IGameObject.Position"/> and the <see cref="P:TopDownShooter.Engine.IGameObject.Velocity"/>.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.GameObject.Width">
            <summary>
            Gets the width of the game object.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.GameObject.Height">
            <summary>
            Gets the height of the game object.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.GameObject.Velocity">
            <summary>
            Gets or sets the velocity of the entity.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.GameObject.Draw(TopDownShooter.Engine.Adapters.ICamera2DAdapter,TopDownShooter.Engine.Adapters.ISpriteBatchAdapter,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the game object with the specified sprite batch adapter and game time.
            </summary>
            <param name="camera">The <see cref="T:TopDownShooter.Engine.Adapters.ICamera2DAdapter"/>.</param>
            <param name="spriteBatch">The sprite batch adapter.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.GameObject.Initialize">
            <summary>
            Initializes the game object.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.GameObject.Destroy">
            <summary>
            Destroyes the game object.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.GameObject.LoadContent(TopDownShooter.Engine.Adapters.IContentManagerAdapter)">
            <summary>
            Loads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.GameObject.BroadcastMessage(TopDownShooter.Engine.ComponentMessage,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Broadcasts a message to all components.
            </summary>
            <param name="message">The message to broadcast.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.GameObject.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the game object with the specified game time.
            </summary>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.GameObject.Get``1">
            <summary>
            Returns the first <see cref="T:TopDownShooter.Engine.IComponent"/> of a requested type.
            </summary>
            <typeparam name="TComponent">Component type to find.</typeparam>
            <returns>TComponent if found, null otherwise.</returns>
            <remarks>To throw or not to throw? That is the question.</remarks>
        </member>
        <member name="M:TopDownShooter.Engine.GameObject.GetAll``1">
            <summary>
            Returns the all <see cref="T:TopDownShooter.Engine.IComponent"/>s of a requested type.
            </summary>
            <typeparam name="TComponent">Component type to find.</typeparam>
            <returns><see cref="T:System.Collections.Generic.IEnumerable`1"/> if found, null otherwise.</returns>
            <remarks>To throw or not to throw? That is the question.</remarks>
        </member>
        <member name="T:TopDownShooter.Engine.IGameItem">
            <summary>
            Interface for game objects that can be picked up and placed into
            an inventory.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IGameItem.Description">
            <summary>
            Gets a description for this item.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IGameItem.IsPickedUp">
            <summary>
            Gets a value indicating whether this game item has been picked up.
            </summary>
            <remarks>For use when managing a collection of these in the world, which ones
            can be removed from the update and draw loops</remarks>
        </member>
        <member name="M:TopDownShooter.Engine.IGameItem.Pickup">
            <summary>
            Should be called when another component will be
            taking ownership of this item.
            </summary>
            <returns><see cref="T:TopDownShooter.Engine.IGameItem"/> reference.</returns>
            <remarks><see cref="T:TopDownShooter.Engine.IGameItem"/> here could be used to return an Inventory friendly
            viewable GameItem here.</remarks>
        </member>
        <member name="T:TopDownShooter.Engine.IGameItemFactory">
            <summary>
            Factory that can be used to create <see cref="T:TopDownShooter.Engine.IGameItem" />
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.IGameItemFactory.CreateBulletItem(System.Int32,Microsoft.Xna.Framework.Vector2,TopDownShooter.Engine.Collisions.ICollisionSystem)">
            <summary>
            Creates a bullet item game object.
            </summary>
            <param name="id">The game object identifier.</param>
            <param name="position">The position of the game object.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" />.</param>
            <returns>The created bullet item.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.IGameItemFactory.CreateCoinItem(System.Int32,Microsoft.Xna.Framework.Vector2,TopDownShooter.Engine.Collisions.ICollisionSystem)">
            <summary>
            Creates a coin item game object.
            </summary>
            <param name="id">The game object identifier.</param>
            <param name="position">The position of the game object.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" />.</param>
            <returns>The created bullet item.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.IGameItemFactory.SpawnRandomBulletItems(System.Int32,TopDownShooter.Engine.Collisions.ICollisionSystem,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Spawns a random number of <see cref="T:TopDownShooter.Engine.Items.CoinGameItem" />s
            </summary>
            <param name="count">Number to create</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" />.</param>
            <param name="minX">Minimum X coordinate</param>
            <param name="maxX">Maximum X coordinate</param>
            <param name="minY">Minimum Y coordiante</param>
            <param name="maxY">Maximum Y coordinate</param>
            <returns>Collection of uninitalized <see cref="T:System.Collections.Generic.IEnumerable`1" /></returns>
        </member>
        <member name="M:TopDownShooter.Engine.IGameItemFactory.SpawnRandomCoinItems(System.Int32,TopDownShooter.Engine.Collisions.ICollisionSystem,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Spawns a random number of coin items.
            </summary>
            <param name="count">Number to create</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" />.</param>
            <param name="minX">Minimum X coordinate</param>
            <param name="maxX">Maximum X coordinate</param>
            <param name="minY">Minimum Y coordiante</param>
            <param name="maxY">Maximum Y coordinate</param>
            <returns>Collection of uninitalized <see cref="T:System.Collections.Generic.IEnumerable`1" /></returns>
        </member>
        <member name="T:TopDownShooter.Engine.IGameObject">
            <summary>
            Defines an interface for a game object.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IGameObject.Position">
            <summary>
            Gets or sets the position of the game object.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IGameObject.ProjectedPosition">
            <summary>
            Gets the projected position, based off the <see cref="P:TopDownShooter.Engine.IGameObject.Position"/> and the <see cref="P:TopDownShooter.Engine.IGameObject.Velocity"/>.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IGameObject.ProjectedBounds">
            <summary>
            Gets the projected bounds, based off the <see cref="P:TopDownShooter.Engine.IGameObject.Position"/> and the <see cref="P:TopDownShooter.Engine.IGameObject.Velocity"/>.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IGameObject.Width">
            <summary>
            Gets the width of the game object.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IGameObject.Height">
            <summary>
            Gets the height of the game object.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IGameObject.Velocity">
            <summary>
            Gets or sets the velocity of the game object.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IGameObject.Components">
            <summary>
            Gets the collection of components.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IGameObject.Bounds">
            <summary>
            Gets the bounds of the game object.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IGameObject.Id">
            <summary>
            Gets the identifier for this game object.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.IGameObject.BroadcastMessage(TopDownShooter.Engine.ComponentMessage,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Broadcasts a message to all components.
            </summary>
            <param name="message">The message to broadcast.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.IGameObject.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the game object with the specified game time.
            </summary>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.IGameObject.Draw(TopDownShooter.Engine.Adapters.ICamera2DAdapter,TopDownShooter.Engine.Adapters.ISpriteBatchAdapter,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the game object with the specified sprite batch adapter and game time.
            </summary>
            <param name="camera">The <see cref="T:TopDownShooter.Engine.Adapters.ICamera2DAdapter"/>.</param>
            <param name="spriteBatch">The sprite batch adapter.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.IGameObject.LoadContent(TopDownShooter.Engine.Adapters.IContentManagerAdapter)">
            <summary>
            Loads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.IGameObject.Initialize">
            <summary>
            Initializes the game object.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.IGameObject.Destroy">
            <summary>
            Destroyes the game object.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.IGameObjectFactory">
            <summary>
            Defines an interface for a game object factory.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.IGameObjectFactory.CreateBulletProjectile(System.Int32,System.Int32,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,TopDownShooter.Engine.Collisions.ICollisionSystem)">
            <summary>
            Creates a bullet projectile game object.
            </summary>
            <param name="id">The game object identifier.</param>
            <param name="parentId">The parent game object identifier.</param>
            <param name="position">The position of the game object.</param>
            <param name="direction">The diretion of the bullet, as a unit vector.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" />.</param>
            <returns>The created bullet projectile.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.IGameObjectFactory.CreateBulletProjectile(System.Int32,System.Int32,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,TopDownShooter.Engine.Collisions.ICollisionSystem,System.Collections.Generic.IEnumerable{TopDownShooter.Engine.IComponent})">
            <summary>
            Creates a bullet projectile game object.
            </summary>
            <param name="id">The game object identifier.</param>
            <param name="parentId">The parent game object identifier.</param>
            <param name="position">The position of the game object.</param>
            <param name="direction">The diretion of the bullet, as a unit vector.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" />.</param>
            <param name="components">The collection of components</param>
            <returns>The created bullet projectile.</returns>
        </member>
        <member name="T:TopDownShooter.Engine.InventoryComponentBase">
            <summary>
            Base class for collecting inventory items
            </summary>
        </member>
        <member name="F:TopDownShooter.Engine.InventoryComponentBase.gameItems">
            <summary>
            The internal storage for game objects.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.InventoryComponentBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.InventoryComponentBase"/> class.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.InventoryComponentBase.#ctor(System.Collections.Generic.IEnumerable{TopDownShooter.Engine.IGameItem})">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.InventoryComponentBase"/> class.
            </summary>
            <param name="gameObjects">Starting items to load this inventory with</param>
        </member>
        <member name="P:TopDownShooter.Engine.InventoryComponentBase.Inventory">
            <summary>
            Gets a reference to the current inventory collection.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.InventoryComponentBase.Destroy">
            <summary>
            Destroys the component.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.InventoryComponentBase.Draw(TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.Adapters.ICamera2DAdapter,TopDownShooter.Engine.Adapters.ISpriteBatchAdapter,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="camera">The <see cref="T:TopDownShooter.Engine.Adapters.ICamera2DAdapter"/>.</param>
            <param name="spriteBatch">The sprite batch adapter.</param>
            <param name="time">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.InventoryComponentBase.Initialize">
            <summary>
            Initializes the component.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.InventoryComponentBase.LoadContent(TopDownShooter.Engine.Adapters.IContentManagerAdapter)">
            <summary>
            Loads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.InventoryComponentBase.ReceiveMessage(TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.ComponentMessage,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Receives a message.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="message">The message object.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.InventoryComponentBase.Update(TopDownShooter.Engine.IGameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object to update.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="T:TopDownShooter.Engine.Inventory.PlayerInventoryComponent">
            <summary>
            Inventory storage for an <see cref="T:TopDownShooter.Engine.IPlayer" />
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Inventory.PlayerInventoryComponent.#ctor(TopDownShooter.Engine.Collisions.ICollisionSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.Inventory.PlayerInventoryComponent" /> class.
            </summary>
            <param name="collisionSystem">Collision system reference.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Inventory.PlayerInventoryComponent.Draw(TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.Adapters.ICamera2DAdapter,TopDownShooter.Engine.Adapters.ISpriteBatchAdapter,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="camera">The <see cref="T:TopDownShooter.Engine.Adapters.ICamera2DAdapter" />.</param>
            <param name="spriteBatch">The sprite batch adapter.</param>
            <param name="time">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Inventory.PlayerInventoryComponent.LoadContent(TopDownShooter.Engine.Adapters.IContentManagerAdapter)">
            <summary>
            Loads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Inventory.PlayerInventoryComponent.ReceiveMessage(TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.ComponentMessage,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Receives a message.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="message">The message object.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Inventory.PlayerInventoryComponent.Update(TopDownShooter.Engine.IGameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object to update.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="T:TopDownShooter.Engine.IPlayer">
            <summary>
            Defines an interface for a player.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IPlayer.Health">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IPlayer.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IPlayer.KillCount">
            <summary>
            Gets or sets the number of kills this player has performed.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.ISceneController">
            <summary>
            Defines an interface for a scene controller.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.ISceneController.ActiveScene">
            <summary>
            Gets the active scene.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.ISceneController.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the scene with the specified sprite batch adapter and game time.
            </summary>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.ISceneController.PreloadAsync(TopDownShooter.Engine.IScene)">
            <summary>
            Asyncronously preloads the specified initialized scene.
            </summary>
            <param name="scene">The initialized scene.</param>
            <returns>An awaitable task.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.ISceneController.Switch(TopDownShooter.Engine.IScene)">
            <summary>
            Switches to the specified scene by destorying the previous scene, and initializing and loading content for the specified scene.
            </summary>
            <param name="scene">The new active scene.</param>
        </member>
        <member name="M:TopDownShooter.Engine.ISceneController.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the game object with the specified game time.
            </summary>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="T:TopDownShooter.Engine.Items.BulletGameItem">
            <summary>
            Bullet Game item implementation
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Items.BulletGameItem.#ctor(System.Int32,Microsoft.Xna.Framework.Vector2,TopDownShooter.Engine.Collisions.ICollisionSystem,System.Collections.Generic.IEnumerable{TopDownShooter.Engine.IComponent})">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.Items.BulletGameItem" /> class.
            </summary>
            <param name="id">The game object identifier.</param>
            <param name="position">The position of the player.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" />.</param>
            <param name="components">A collection of components.</param>
        </member>
        <member name="P:TopDownShooter.Engine.Items.BulletGameItem.Description">
            <summary>
            Gets a description for this item.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Items.BulletGameItem.Height">
            <summary>
            Gets the height of the game object.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Items.BulletGameItem.Width">
            <summary>
            Gets the Width of the game object.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Items.BulletGameItem.Initialize">
            <summary>
            Initializes the game object.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Items.BulletGameItem.Pickup">
            <summary>
            Should be called when another component will be
            taking ownership of this item.
            </summary>
            <returns><see cref="T:TopDownShooter.Engine.IGameItem" /> reference.</returns>
            <remarks>
            <see cref="T:TopDownShooter.Engine.IGameItem" /> here could be used to return an Inventory friendly
            viewable GameItem here.
            </remarks>
        </member>
        <member name="T:TopDownShooter.Engine.Items.CoinGameItem">
            <summary>
            Bullet Game item implementation
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Items.CoinGameItem.#ctor(System.Int32,Microsoft.Xna.Framework.Vector2,TopDownShooter.Engine.Collisions.ICollisionSystem,System.Collections.Generic.IEnumerable{TopDownShooter.Engine.IComponent})">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.Items.CoinGameItem"/> class.
            </summary>
            <param name="id">The game object identifier.</param>
            <param name="position">The position of the player.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" />.</param>
            <param name="components">A collection of components.</param>
        </member>
        <member name="P:TopDownShooter.Engine.Items.CoinGameItem.Description">
            <summary>
            Gets a description for this item.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Items.CoinGameItem.Height">
            <summary>
            Gets the height of the game object.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Items.CoinGameItem.Width">
            <summary>
            Gets the Width of the game object.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Items.CoinGameItem.Initialize">
            <summary>
            Initializes the game object.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Items.CoinGameItem.Pickup">
            <summary>
            Should be called when another component will be
            taking ownership of this item.
            </summary>
            <returns><see cref="T:TopDownShooter.Engine.IGameItem"/> reference.</returns>
            <remarks><see cref="T:TopDownShooter.Engine.IGameItem"/> here could be used to return an Inventory friendly
            viewable GameItem here.</remarks>
        </member>
        <member name="T:TopDownShooter.Engine.Levels.ITile">
            <summary>
            Defines an inteface for a tile.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Levels.ITile.TileCoordinates">
            <summary>
            Gets the tile's position in tile coordinates.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Levels.ITile.Texture">
            <summary>
            Gets the texture
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Levels.ITile.TexturePosition">
            <summary>
            Gets the position of the tile in the tileset.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Levels.ITile.TileInteractionType">
            <summary>
            Gets the <see cref="P:TopDownShooter.Engine.Levels.ITile.TileInteractionType" />.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.Levels.ITileCollection">
            <summary>
            Defines an interface for storing and indexing tiles.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Levels.ITileCollection.Add(Microsoft.Xna.Framework.Vector2,TopDownShooter.Engine.Levels.ITile)">
            <summary>
            Adds a tile to the collection at the specified world coordinate.
            </summary>
            <param name="coordinate">The location of the tile, in world coordinates.</param>
            <param name="tile">The <see cref="T:TopDownShooter.Engine.Levels.ITile" />.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Levels.ITileCollection.GetTile(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Gets the tile at the specified world coordinates.
            </summary>
            <param name="coordinate">The location of the tile, in world coordinates.</param>
            <returns>The <see cref="T:TopDownShooter.Engine.Levels.ITile" />.</returns>
        </member>
        <member name="T:TopDownShooter.Engine.Levels.ITileFactory">
            <summary>
            Defines an interface for a tile factory.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Levels.ITileFactory.CreateTile(System.Int32,TopDownShooter.Engine.Collisions.ICollisionSystem,TopDownShooter.Engine.Levels.TileInteractionType,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Point,System.Int32,System.Int32,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates a tile.
            </summary>
            <param name="id">The game object identifier.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" />.</param>
            <param name="tileInteractionType">The <see cref="T:TopDownShooter.Engine.Levels.TileInteractionType" />.</param>
            <param name="texture">The <see cref="T:Microsoft.Xna.Framework.Graphics.Texture2D" />.</param>
            <param name="position">The position of the tile.</param>
            <param name="tileCoordinates">The tile's position in tile coordinates.</param>
            <param name="width">The width of the tile.</param>
            <param name="height">The height of the tile.</param>
            <param name="texturePosition">The texture's position in the tile set.</param>
            <returns>The created tile.</returns>
        </member>
        <member name="T:TopDownShooter.Engine.Levels.Level">
            <summary>
            Defines a level.
            </summary>
        </member>
        <member name="F:TopDownShooter.Engine.Levels.Level.map">
            <summary>
            The <see cref="T:TiledSharp.TmxMap" />.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Levels.Level.#ctor(System.Int32,TopDownShooter.Engine.Collisions.ICollisionSystem,TopDownShooter.Engine.Adapters.ITmxMapAdapter)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.Levels.Level" /> class.
            </summary>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" />.</param>
            <param name="map">
            The <see cref="T:TopDownShooter.Engine.Adapters.ITmxMapAdapter" /> used to generate the level.
            </param>
            <param name="id">The game object identifier</param>
        </member>
        <member name="M:TopDownShooter.Engine.Levels.Level.#ctor(System.Int32,TopDownShooter.Engine.Collisions.ICollisionSystem,TopDownShooter.Engine.Adapters.ITmxMapAdapter,TopDownShooter.Engine.Levels.ITileFactory,TopDownShooter.Engine.Levels.ITileCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.Levels.Level" /> class.
            </summary>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" />.</param>
            <param name="map">
            The <see cref="T:TopDownShooter.Engine.Adapters.ITmxMapAdapter" /> used to generate the level.
            </param>
            <param name="id">The game object identifier</param>
            <param name="tileFactory">The <see cref="T:TopDownShooter.Engine.Levels.ITileFactory" /> used to generate tiles.</param>
            <param name="tileCollection">The <see cref="T:TopDownShooter.Engine.Levels.ITileCollection" /> used to store tiles.</param>
            <remarks>Internal for unit testing.</remarks>
        </member>
        <member name="P:TopDownShooter.Engine.Levels.Level.Height">
            <summary>
            Gets the height of the game object.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Levels.Level.Width">
            <summary>
            Gets the width of the game object.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Levels.Level.Draw(TopDownShooter.Engine.Adapters.ICamera2DAdapter,TopDownShooter.Engine.Adapters.ISpriteBatchAdapter,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the game object with the specified sprite batch adapter and game time.
            </summary>
            <param name="camera">The <see cref="T:TopDownShooter.Engine.Adapters.ICamera2DAdapter" />.</param>
            <param name="spriteBatch">The sprite batch adapter.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Levels.Level.LoadContent(TopDownShooter.Engine.Adapters.IContentManagerAdapter)">
            <summary>
            Loads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Levels.Level.LoadContentAsync(TopDownShooter.Engine.Adapters.IContentManagerAdapter,System.IProgress{System.Int32})">
            <summary>
            Asynchronously loads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
            <param name="progress">The <see cref="T:System.IProgress`1"/> to report progress to.</param>
            <returns>An awaitable task.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Levels.Level.ImportLayer(TiledSharp.TmxLayer,System.Collections.Generic.Dictionary{TiledSharp.TmxTileset,Microsoft.Xna.Framework.Graphics.Texture2D})">
            <summary>
            Imports the tiles from the specified <see cref="T:TiledSharp.TmxLayer" /> using the specified textures.
            </summary>
            <param name="layer">The <see cref="T:TiledSharp.TmxLayer" /> to import from.</param>
            <param name="textures">The textures map that contains <see cref="T:TiledSharp.TmxTileset" /> to <see cref="T:Microsoft.Xna.Framework.Graphics.Texture2D" /> mappings.</param>
        </member>
        <member name="T:TopDownShooter.Engine.Levels.Tile">
            <summary>
            Defines a tile.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Levels.Tile.#ctor(System.Int32,TopDownShooter.Engine.Collisions.ICollisionSystem,TopDownShooter.Engine.Levels.TileInteractionType,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Point,System.Int32,System.Int32,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.Levels.Tile" /> class.
            </summary>
            <param name="id">The game object identifier.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" />.</param>
            <param name="tileInteractionType">The <see cref="P:TopDownShooter.Engine.Levels.Tile.TileInteractionType" />.</param>
            <param name="texture">The <see cref="T:Microsoft.Xna.Framework.Graphics.Texture2D" />.</param>
            <param name="position">The position of the tile.</param>
            <param name="tileCoordinates">The tile's position in tile coordinates.</param>
            <param name="width">The width of the tile.</param>
            <param name="height">The height of the tile.</param>
            <param name="texturePosition">The texture's position in the tile set.</param>
        </member>
        <member name="P:TopDownShooter.Engine.Levels.Tile.Height">
            <summary>
            Gets the height.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Levels.Tile.Texture">
            <summary>
            Gets the texture
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Levels.Tile.TexturePosition">
            <summary>
            Gets the position of the tile in the tileset.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Levels.Tile.TileCoordinates">
            <summary>
            Gets or sets the tile's position in tile coordinates.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Levels.Tile.Width">
            <summary>
            Gets the width.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Levels.Tile.TileInteractionType">
            <summary>
            Gets the <see cref="P:TopDownShooter.Engine.Levels.Tile.TileInteractionType" />.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Levels.Tile.Draw(TopDownShooter.Engine.Adapters.ICamera2DAdapter,TopDownShooter.Engine.Adapters.ISpriteBatchAdapter,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws this <see cref="T:TopDownShooter.Engine.Levels.Tile" />.
            </summary>
            <param name="camera">The <see cref="T:TopDownShooter.Engine.Adapters.ICamera2DAdapter"/>.</param>
            <param name="spriteBatch">
            The <see cref="T:TopDownShooter.Engine.Adapters.ISpriteBatchAdapter" />.
            </param>
            <param name="gameTime">
            The game time.
            </param>
        </member>
        <member name="M:TopDownShooter.Engine.Levels.Tile.Initialize">
            <summary>
            Initializes the game object.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.Levels.TileCollection">
            <summary>
            Provides a default implementation of the <see cref="T:TopDownShooter.Engine.Levels.ITileCollection" /> interface.
            </summary>
        </member>
        <member name="F:TopDownShooter.Engine.Levels.TileCollection.tiles">
            <summary>
            The collection of tiles, mapped from world coordinates.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Levels.TileCollection.Add(Microsoft.Xna.Framework.Vector2,TopDownShooter.Engine.Levels.ITile)">
            <summary>
            Adds a tile to the collection at the specified world coordinate.
            </summary>
            <param name="coordinate">The location of the tile, in world coordinates.</param>
            <param name="tile">The <see cref="T:TopDownShooter.Engine.Levels.ITile" />.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Levels.TileCollection.GetTile(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Gets the tile at the specified world coordinates.
            </summary>
            <param name="coordinate">The location of the tile, in world coordinates.</param>
            <returns>The <see cref="T:TopDownShooter.Engine.Levels.ITile" />.</returns>
        </member>
        <member name="T:TopDownShooter.Engine.Levels.TileFactory">
            <summary>
            Provides a default implementation of the <see cref="T:TopDownShooter.Engine.Levels.ITileFactory" /> interface.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Levels.TileFactory.CreateTile(System.Int32,TopDownShooter.Engine.Collisions.ICollisionSystem,TopDownShooter.Engine.Levels.TileInteractionType,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Point,System.Int32,System.Int32,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates a tile.
            </summary>
            <param name="id">The game object identifier.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" />.</param>
            <param name="tileInteractionType">The <see cref="T:TopDownShooter.Engine.Levels.TileInteractionType" />.</param>
            <param name="texture">The <see cref="T:Microsoft.Xna.Framework.Graphics.Texture2D" />.</param>
            <param name="position">The position of the tile.</param>
            <param name="tileCoordinates">The tile's position in tile coordinates.</param>
            <param name="width">The width of the tile.</param>
            <param name="height">The height of the tile.</param>
            <param name="texturePosition">The texture's position in the tile set.</param>
            <returns>The created tile.</returns>
        </member>
        <member name="T:TopDownShooter.Engine.Levels.TileInteractionType">
            <summary>
            Defines the tile interaction types.
            </summary>
        </member>
        <member name="F:TopDownShooter.Engine.Levels.TileInteractionType.NonBlocking">
            <summary>
            A non-blocking tile.
            </summary>
        </member>
        <member name="F:TopDownShooter.Engine.Levels.TileInteractionType.Blocking">
            <summary>
            A blocking tile.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.MessageType">
            <summary>
            Defines the message types used to communicate between <see cref="T:TopDownShooter.Engine.IComponent" /> objects.
            </summary>
        </member>
        <member name="F:TopDownShooter.Engine.MessageType.Fire">
            <summary>
            The fire message type.
            </summary>
        </member>
        <member name="F:TopDownShooter.Engine.MessageType.Movement">
            <summary>
            Represents a change in movement
            </summary>
            <remarks>Details will be a velocity vector?</remarks>
        </member>
        <member name="F:TopDownShooter.Engine.MessageType.ItemPickup">
            <summary>
            Represents an item requested to be picked up.
            </summary>
            <remarks>Details should be the <see cref="T:TopDownShooter.Engine.IGameItem"/></remarks>
        </member>
        <member name="F:TopDownShooter.Engine.MessageType.Dash">
            <summary>
            Represents a dash movement.
            </summary>
        </member>
        <member name="F:TopDownShooter.Engine.MessageType.DashStatusRequest">
            <summary>
            Represents a dash status request.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.Player">
            <summary>
            Simple player class.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Player.#ctor(System.Int32,Microsoft.Xna.Framework.Vector2,TopDownShooter.Engine.Collisions.ICollisionSystem,System.Collections.Generic.IEnumerable{TopDownShooter.Engine.IComponent})">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.Player" /> class.
            </summary>
            <param name="id">The game object identifier.</param>
            <param name="position">The position of the player.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" />.</param>
            <param name="components">A collection of components.</param>
        </member>
        <member name="P:TopDownShooter.Engine.Player.Bounds">
            <summary>
            Gets the bounds offset via the size of the <see cref="P:TopDownShooter.Engine.AnimationComponent.FrameProperties" />
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Player.Health">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Player.Height">
            <summary>
            Gets the height of the game object.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Player.KillCount">
            <summary>
            Gets or sets the number of kills this player has performed.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Player.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Player.ProjectedBounds">
            <summary>
            Gets the projected bounds, based off the <see cref="P:TopDownShooter.Engine.IGameObject.Position" /> and the <see cref="P:TopDownShooter.Engine.IGameObject.Velocity" />.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Player.Width">
            <summary>
            Gets the width of the game object.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Player.Draw(TopDownShooter.Engine.Adapters.ICamera2DAdapter,TopDownShooter.Engine.Adapters.ISpriteBatchAdapter,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the game object with the specified sprite batch adapter and game time.
            </summary>
            <param name="camera">The <see cref="T:TopDownShooter.Engine.Adapters.ICamera2DAdapter"/>.</param>
            <param name="spriteBatch">The sprite batch adapter.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Player.LoadContent(TopDownShooter.Engine.Adapters.IContentManagerAdapter)">
            <summary>
            Loads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Player.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the game object with the specified game time.
            </summary>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="T:TopDownShooter.Engine.PlayerColliderComponent">
            <summary>
            Defines a collider component for player objects.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.PlayerColliderComponent.#ctor(System.Int32,TopDownShooter.Engine.Collisions.ICollisionSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.PlayerColliderComponent" /> class.
            </summary>
            <param name="gameObjectId">The parent game object identifier.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" />.</param>
        </member>
        <member name="M:TopDownShooter.Engine.PlayerColliderComponent.Collide(TopDownShooter.Engine.Collisions.IColliderComponent,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Performs a collision with the specified <see cref="T:TopDownShooter.Engine.Collisions.IColliderComponent" />.
            </summary>
            <param name="other">The other collider component.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="T:TopDownShooter.Engine.Projectiles.BulletProjectile">
            <summary>
            Defines a bullet projectile game object.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Projectiles.BulletProjectile.#ctor(System.Int32,System.Int32,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,TopDownShooter.Engine.Collisions.ICollisionSystem,System.Collections.Generic.IEnumerable{TopDownShooter.Engine.IComponent})">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.Projectiles.BulletProjectile" /> class.
            </summary>
            <param name="id">The game object identifier.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" />.</param>
            <param name="components">The collection of components.</param>
            <param name="parentId">The parent game object identifier.</param>
            <param name="position">The position of the game object.</param>
            <param name="direction">The direction of the bullet projectile, as a unit vector.</param>
        </member>
        <member name="P:TopDownShooter.Engine.Projectiles.BulletProjectile.Height">
            <summary>
            Gets the height of the game object.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Projectiles.BulletProjectile.Speed">
            <summary>
            Gets the speed of the projectile.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Projectiles.BulletProjectile.Width">
            <summary>
            Gets the width of the game object.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.Projectiles.BulletProjectileColliderComponent">
            <summary>
            Defines a collider component for the bullet projectile.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Projectiles.BulletProjectileColliderComponent.#ctor(System.Int32,System.Int32,TopDownShooter.Engine.Collisions.ICollisionSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.Projectiles.BulletProjectileColliderComponent" /> class.
            </summary>
            <param name="gameObjectId">The parent game object identifier.</param>
            <param name="bulletParentId">The bullet's parent game object identifier.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" />.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Projectiles.BulletProjectileColliderComponent.Collide(TopDownShooter.Engine.Collisions.IColliderComponent,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Performs a collision with the specified <see cref="T:TopDownShooter.Engine.Collisions.IColliderComponent" />.
            </summary>
            <param name="other">The other collider component.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="T:TopDownShooter.Engine.Projectiles.BulletProjectileGeneratorComponent">
            <summary>
            Defines a component for generating bullet projectiles.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Projectiles.BulletProjectileGeneratorComponent.#ctor(TopDownShooter.Engine.Collisions.ICollisionSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.Projectiles.BulletProjectileGeneratorComponent" /> class.
            </summary>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" /> to use for bullet projectiles.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Projectiles.BulletProjectileGeneratorComponent.#ctor(TopDownShooter.Engine.Collisions.ICollisionSystem,TopDownShooter.Engine.IGameObjectFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.Projectiles.BulletProjectileGeneratorComponent" /> class.
            </summary>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.Collisions.ICollisionSystem" /> to use for bullet projectiles.</param>
            <param name="factory">The <see cref="T:TopDownShooter.Engine.IGameObjectFactory" /> used to create bullet projectiles.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Projectiles.BulletProjectileGeneratorComponent.Destroy">
            <summary>
            Destroys the component.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Projectiles.BulletProjectileGeneratorComponent.Draw(TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.Adapters.ICamera2DAdapter,TopDownShooter.Engine.Adapters.ISpriteBatchAdapter,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="camera">The <see cref="T:TopDownShooter.Engine.Adapters.ICamera2DAdapter"/>.</param>
            <param name="spriteBatch">The sprite batch adapter.</param>
            <param name="time">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Projectiles.BulletProjectileGeneratorComponent.Initialize">
            <summary>
            Initializes the component.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Projectiles.BulletProjectileGeneratorComponent.LoadContent(TopDownShooter.Engine.Adapters.IContentManagerAdapter)">
            <summary>
            Loads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Projectiles.BulletProjectileGeneratorComponent.ReceiveMessage(TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.ComponentMessage,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Receives a message.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="message">The message object.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Projectiles.BulletProjectileGeneratorComponent.Update(TopDownShooter.Engine.IGameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object to update.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="T:TopDownShooter.Engine.RandomExtensions">
            <summary>
            Contains extension methods for the <see cref="T:System.Random" /> class.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.RandomExtensions.NextDouble(System.Random,System.Double,System.Double)">
            <summary>
            Retreives the next random double between the specified range.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object.</param>
            <param name="minimum">The minimum value.</param>
            <param name="maximum">The maximum exclusive value.</param>
            <returns>The random double.</returns>
        </member>
        <member name="T:TopDownShooter.Engine.IScene">
            <summary>
            Defines an interface for a scene.
            </summary>
        </member>
        <member name="E:TopDownShooter.Engine.IScene.Completed">
            <summary>
            Raised when the scene is completed.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.IScene.Destroy">
            <summary>
            Destroyes the game object.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.IScene.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the scene with the specified sprite batch adapter and game time.
            </summary>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.IScene.Initialize">
            <summary>
            Initializes the game object.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.IScene.LoadContentAsync(TopDownShooter.Engine.Adapters.IContentManagerAdapter,System.IProgress{System.Int32})">
            <summary>
            Asynchronously oads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
            <param name="progress">The <see cref="T:System.IProgress`1"/> to report progress.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.IScene.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the game object with the specified game time.
            </summary>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="T:TopDownShooter.Engine.SceneController">
            <summary>
            Provides a default implementation of the <see cref="T:TopDownShooter.Engine.ISceneController" /> interface.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.SceneController.#ctor(TopDownShooter.Engine.Adapters.IContentManagerAdapter)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.SceneController" /> class.
            </summary>
            <param name="contentManager">The <see cref="T:TopDownShooter.Engine.Adapters.IContentManagerAdapter" />.</param>
        </member>
        <member name="P:TopDownShooter.Engine.SceneController.ActiveScene">
            <summary>
            Gets the active scene.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.SceneController.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the scene with the specified sprite batch adapter and game time.
            </summary>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.SceneController.PreloadAsync(TopDownShooter.Engine.IScene)">
            <summary>
            Asyncronously preloads the specified initialized scene.
            </summary>
            <param name="scene">The initialized scene.</param>
            <returns>An awaitable task.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.SceneController.Switch(TopDownShooter.Engine.IScene)">
            <summary>
            Switches to the specified scene by destorying the previous scene, and initializing and loading content for the specified scene.
            </summary>
            <param name="scene">The new active scene.</param>
        </member>
        <member name="M:TopDownShooter.Engine.SceneController.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the game object with the specified game time.
            </summary>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.SceneController.Report(System.Int32)">
            <summary>
            Reports a progress update.
            </summary>
            <param name="value">The value of the updated progress.</param>
        </member>
    </members>
</doc>
