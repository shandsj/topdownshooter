<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TopDownShooter.Engine</name>
    </assembly>
    <members>
        <member name="T:TopDownShooter.Engine.AnimationComponent">
            <summary>
            Defines an animation class.
            </summary>
        </member>
        <member name="F:TopDownShooter.Engine.AnimationComponent.assetName">
            <summary>
            The asset name used to load content.
            </summary>
        </member>
        <member name="F:TopDownShooter.Engine.AnimationComponent.duration">
            <summary>
            The current duration of the current frame.
            </summary>
        </member>
        <member name="F:TopDownShooter.Engine.AnimationComponent.texture">
            <summary>
            The texture that contains the frames.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.AnimationComponent.#ctor(System.String,TopDownShooter.Engine.FrameProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.AnimationComponent" /> class.
            </summary>
            <param name="assetName">The asset name used to load content.</param>
            <param name="frameProperties">The <see cref="P:TopDownShooter.Engine.AnimationComponent.FrameProperties" /> for this <see cref="T:TopDownShooter.Engine.AnimationComponent" />.</param>
        </member>
        <member name="P:TopDownShooter.Engine.AnimationComponent.FrameIndex">
            <summary>
            Gets the current frame index.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.AnimationComponent.FrameProperties">
            <summary>
            Gets the <see cref="P:TopDownShooter.Engine.AnimationComponent.FrameProperties" />  for this <see cref="T:TopDownShooter.Engine.AnimationComponent" />.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.AnimationComponent.IsAnimating">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:TopDownShooter.Engine.AnimationComponent" /> is animating.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.AnimationComponent.IsLooping">
            <summary>
            Gets or sets a value indicating whether to loop the <see cref="T:TopDownShooter.Engine.AnimationComponent" />.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.AnimationComponent.Rotation">
            <summary>
            Gets or sets the rotation for this <see cref="T:TopDownShooter.Engine.AnimationComponent" />.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.AnimationComponent.Scale">
            <summary>
            Gets or sets the scale for this <see cref="T:TopDownShooter.Engine.AnimationComponent" />.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.AnimationComponent.SpriteEffect">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Xna.Framework.Graphics.SpriteEffects" /> for this <see cref="T:TopDownShooter.Engine.AnimationComponent" />.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.AnimationComponent.Initialize">
            <summary>
            Allows the game to perform any initialization it needs to before starting to run.
            This is where it can query for any required services and load any non-graphic
            related content.  Calling base.Initialize will enumerate through any components
            and initialize them as well.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.AnimationComponent.LoadContent(TopDownShooter.Engine.IContentManagerAdapter)">
            <summary>
            Loads the content of this <see cref="T:TopDownShooter.Engine.AnimationComponent" />.
            </summary>
            <param name="contentManager">
            The <see cref="T:TopDownShooter.Engine.IContentManagerAdapter" />.
            </param>
        </member>
        <member name="M:TopDownShooter.Engine.AnimationComponent.Reset">
            <summary>
            Resets the <see cref="T:TopDownShooter.Engine.AnimationComponent" />.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.AnimationComponent.UnloadContent(TopDownShooter.Engine.IContentManagerAdapter)">
            <summary>
            Unloads the content of this <see cref="T:TopDownShooter.Engine.AnimationComponent" />.
            </summary>
            <param name="contentManager">The <see cref="T:TopDownShooter.Engine.IContentManagerAdapter" />.</param>
        </member>
        <member name="M:TopDownShooter.Engine.AnimationComponent.ReceiveMessage(TopDownShooter.Engine.IGameObject,System.Object)">
            <summary>
            Receives a message.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="message">The message object.</param>
        </member>
        <member name="M:TopDownShooter.Engine.AnimationComponent.Update(TopDownShooter.Engine.IGameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object to update.</param>
            <param name="time">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.AnimationComponent.Draw(TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.ISpriteBatchAdapter,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="spriteBatch">The sprite batch adapter.</param>
            <param name="time">The game time.</param>
        </member>
        <member name="T:TopDownShooter.Engine.BulletProjectile">
            <summary>
            Defines a bullet projectile game object.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.BulletProjectile.#ctor(System.Int32,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,TopDownShooter.Engine.ICollisionSystem,System.Collections.Generic.IEnumerable{TopDownShooter.Engine.IComponent})">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.BulletProjectile" /> class.
            </summary>
            <param name="id">The game object identifier.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.ICollisionSystem" />.</param>
            <param name="components">The collection of components.</param>
            <param name="position">The position of the game object.</param>
            <param name="direction">The direction of the bullet projectile, as a unit vector.</param>
        </member>
        <member name="P:TopDownShooter.Engine.BulletProjectile.Height">
            <summary>
            Gets the height of the game object.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.BulletProjectile.Width">
            <summary>
            Gets the width of the game object.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.BulletProjectileColliderComponent">
            <summary>
            Defines a collider component for the bullet projectile.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.BulletProjectileColliderComponent.#ctor(System.Int32,TopDownShooter.Engine.ICollisionSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.BulletProjectileColliderComponent" /> class.
            </summary>
            <param name="gameObjectId">The parent game object identifier.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.ICollisionSystem" />.</param>
        </member>
        <member name="M:TopDownShooter.Engine.BulletProjectileColliderComponent.Collide(TopDownShooter.Engine.IColliderComponent)">
            <summary>
            Performs a collision with the specified <see cref="T:TopDownShooter.Engine.IColliderComponent" />.
            </summary>
            <param name="other">The other collider component.</param>
        </member>
        <member name="T:TopDownShooter.Engine.BulletProjectileGeneratorComponent">
            <summary>
            Defines a component for generating bullet projectiles.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.BulletProjectileGeneratorComponent.#ctor(TopDownShooter.Engine.ICollisionSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.BulletProjectileGeneratorComponent" /> class.
            </summary>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.ICollisionSystem" /> to use for bullet projectiles.</param>
        </member>
        <member name="M:TopDownShooter.Engine.BulletProjectileGeneratorComponent.#ctor(TopDownShooter.Engine.ICollisionSystem,TopDownShooter.Engine.IGameObjectFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.BulletProjectileGeneratorComponent" /> class.
            </summary>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.ICollisionSystem" /> to use for bullet projectiles.</param>
            <param name="factory">The <see cref="T:TopDownShooter.Engine.IGameObjectFactory" /> used to create bullet projectiles.</param>
        </member>
        <member name="M:TopDownShooter.Engine.BulletProjectileGeneratorComponent.Draw(TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.ISpriteBatchAdapter,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="spriteBatch">The sprite batch adapter.</param>
            <param name="time">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.BulletProjectileGeneratorComponent.LoadContent(TopDownShooter.Engine.IContentManagerAdapter)">
            <summary>
            Loads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.BulletProjectileGeneratorComponent.ReceiveMessage(TopDownShooter.Engine.IGameObject,System.Object)">
            <summary>
            Receives a message.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="message">The message object.</param>
        </member>
        <member name="M:TopDownShooter.Engine.BulletProjectileGeneratorComponent.UnloadContent(TopDownShooter.Engine.IContentManagerAdapter)">
            <summary>
            Unloads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.BulletProjectileGeneratorComponent.Update(TopDownShooter.Engine.IGameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object to update.</param>
            <param name="time">The game time.</param>
        </member>
        <member name="T:TopDownShooter.Engine.Camera">
            <summary>
            The camera.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Camera.#ctor(Microsoft.Xna.Framework.Graphics.Viewport)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.Camera" /> class.
            </summary>
            <param name="viewport">
            The viewport.
            </param>
        </member>
        <member name="P:TopDownShooter.Engine.Camera.Bounds">
            <summary>
            Gets or sets the bounds.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Camera.Position">
            <summary>
            Gets or sets the position.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Camera.Rotation">
            <summary>
            Gets or sets the rotation.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Camera.TransformMatrix">
            <summary>
            Gets the transform matrix.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Camera.Zoom">
            <summary>
            Gets or sets the zoom.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.CollisionSystem">
            <summary>
            Defines a system to handle collisions.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.CollisionSystem.NextGameObjectId">
            <summary>
            Gets or sets the next available game object identifier.
            </summary>
            TODO: refactor this and put it somewhere else.
        </member>
        <member name="P:TopDownShooter.Engine.CollisionSystem.Colliders">
            <summary>
            Gets the collection of <see cref="T:TopDownShooter.Engine.IColliderComponent"/> objects registered with this <see cref="T:TopDownShooter.Engine.ICollisionSystem"/>.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.CollisionSystem.GameObjects">
            <summary>
            Gets the collection of <see cref="T:TopDownShooter.Engine.IGameObject"/> objects registered with this <see cref="T:TopDownShooter.Engine.ICollisionSystem"/>.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.CollisionSystem.CheckCollisions(TopDownShooter.Engine.IColliderComponent)">
            <summary>
            Checks the collisions for the specified <see cref="T:TopDownShooter.Engine.IColliderComponent" />.
            </summary>
            <param name="collider">The rigid body.</param>
        </member>
        <member name="M:TopDownShooter.Engine.CollisionSystem.GetGameObject(System.Int32)">
            <summary>
            Gets the <see cref="T:TopDownShooter.Engine.IGameObject" /> with the specified identifer.
            </summary>
            <param name="id">Game object identifier.</param>
            <returns>The <see cref="T:TopDownShooter.Engine.IGameObject" />.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.CollisionSystem.Register(System.Int32,TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.IColliderComponent)">
            <summary>
            Registers the specifieid <see cref="T:TopDownShooter.Engine.IGameObject" /> and <see cref="T:TopDownShooter.Engine.IColliderComponent" /> with the specified identifier.
            </summary>
            <param name="id">The identifier of the game object.</param>
            <param name="gameObject">The game object.</param>
            <param name="collider">The collider component.</param>
        </member>
        <member name="M:TopDownShooter.Engine.CollisionSystem.Unregister(System.Int32)">
            <summary>
            Unregisters the game object and collider with the specified identifier.
            </summary>
            <param name="id">The identifier of the game object.</param>
        </member>
        <member name="T:TopDownShooter.Engine.ContentManagerAdapter">
            <summary>
            Defines an adapter for the <see cref="T:Microsoft.Xna.Framework.Content.ContentManager" /> class.
            </summary>
        </member>
        <member name="F:TopDownShooter.Engine.ContentManagerAdapter.content">
            <summary>
            The <see cref="T:Microsoft.Xna.Framework.Content.ContentManager" />.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.ContentManagerAdapter.#ctor(Microsoft.Xna.Framework.Content.ContentManager)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.ContentManagerAdapter" /> class.
            </summary>
            <param name="content">
            The <see cref="T:Microsoft.Xna.Framework.Content.ContentManager" />.
            </param>
        </member>
        <member name="M:TopDownShooter.Engine.ContentManagerAdapter.Load``1(System.String)">
            <summary>
            Loads an asset from the specified asset name.
            </summary>
            <typeparam name="T">The type of the asset to load.</typeparam>
            <param name="assetName">The asset name.</param>
            <returns>The loaded asset.</returns>
        </member>
        <member name="T:TopDownShooter.Engine.DebugComponent">
            <summary>
             Primitive Debug Component, uses the <see cref="P:TopDownShooter.Engine.GameObject.Bounds"/> to place a hollow <see cref="T:Microsoft.Xna.Framework.Rectangle"/>
             around it.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.DebugComponent.#ctor(Microsoft.Xna.Framework.Color,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.DebugComponent"/> class.
            </summary>
            <param name="color">Border color for the bounding box around a given <see cref="T:TopDownShooter.Engine.GameObject"/></param>
            <param name="borderThickness">The thickness for the rectangluar border for a given <see cref="T:TopDownShooter.Engine.GameObject"/></param>
        </member>
        <member name="M:TopDownShooter.Engine.DebugComponent.Draw(TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.ISpriteBatchAdapter,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="spriteBatch">The sprite batch adapter.</param>
            <param name="time">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.DebugComponent.LoadContent(TopDownShooter.Engine.IContentManagerAdapter)">
            <summary>
            Loads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.DebugComponent.UnloadContent(TopDownShooter.Engine.IContentManagerAdapter)">
            <summary>
            Unloads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.DebugComponent.ReceiveMessage(TopDownShooter.Engine.IGameObject,System.Object)">
            <summary>
            Receives a message.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="message">The message object.</param>
        </member>
        <member name="M:TopDownShooter.Engine.DebugComponent.Update(TopDownShooter.Engine.IGameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object to update.</param>
            <param name="time">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.DebugComponent.DrawRectangle(TopDownShooter.Engine.ISpriteBatchAdapter,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws a hollow rectangle around a provided <see cref="T:Microsoft.Xna.Framework.Rectangle"/>
            </summary>
            <param name="spriteBatch">The sprite batch adapter.</param>
            <param name="area">Area to wrap with a border</param>
        </member>
        <member name="T:TopDownShooter.Engine.GameObjectFactory">
            <summary>
            Provides an implementation of <see cref="T:TopDownShooter.Engine.IGameObjectFactory" />.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.GameObjectFactory.CreateBulletProjectile(System.Int32,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,TopDownShooter.Engine.ICollisionSystem)">
            <summary>
            Creates a bullet projectile game object.
            </summary>
            <param name="id">The game object identifier.</param>
            <param name="position">The position of the game object.</param>
            <param name="direction">The diretion of the bullet, as a unit vector.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.ICollisionSystem" />.</param>
            <returns>The created bullet projectile.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.GameObjectFactory.CreateBulletProjectile(System.Int32,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,TopDownShooter.Engine.ICollisionSystem,System.Collections.Generic.IEnumerable{TopDownShooter.Engine.IComponent})">
            <summary>
            Creates a bullet projectile game object.
            </summary>
            <param name="id">The game object identifier.</param>
            <param name="position">The position of the game object.</param>
            <param name="direction">The diretion of the bullet, as a unit vector.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.ICollisionSystem" />.</param>
            <param name="components">The collection of components</param>
            <returns>The created bullet projectile.</returns>
        </member>
        <member name="T:TopDownShooter.Engine.HumanInputControllerComponent">
            <summary>
            Herds Inputs...
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.HumanInputControllerComponent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.HumanInputControllerComponent"/> class.
            Creates a new <see cref="T:TopDownShooter.Engine.HumanInputControllerComponent" /> that can be used to have a simple Composite for managing
            inputs among multiple devices.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.HumanInputControllerComponent.Fire">
            <summary>
            Gets a value indicating whether a fire was requested.
            </summary>
            <returns>True if the action was requested; false otherwise.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.HumanInputControllerComponent.MoveDown">
            <summary>
            Gets whether or not a up move was requested.
            </summary>
            <returns>True to move down.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.HumanInputControllerComponent.MoveLeft">
            <summary>
            Gets whether or not a left move was requested.
            </summary>
            <returns>True to move left.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.HumanInputControllerComponent.MoveRight">
            <summary>
            Gets whether or not a right move was requested.
            </summary>
            <returns>True to move right.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.HumanInputControllerComponent.MoveUp">
            <summary>
            Gets whether or not a up move was requested.
            </summary>
            <returns>True to move up.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.HumanInputControllerComponent.Update(TopDownShooter.Engine.IGameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object to update.</param>
            <param name="time">The game time.</param>
        </member>
        <member name="T:TopDownShooter.Engine.IColliderComponent">
            <summary>
            Defines an interface for a collider component.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IColliderComponent.GameObjectId">
            <summary>
            Gets the parent game object identifer.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.IColliderComponent.Collide(TopDownShooter.Engine.IColliderComponent)">
            <summary>
            Performs a collision with the specified <see cref="T:TopDownShooter.Engine.IColliderComponent" />.
            </summary>
            <param name="other">The other collider component.</param>
        </member>
        <member name="M:TopDownShooter.Engine.IColliderComponent.IsCollision(TopDownShooter.Engine.IColliderComponent)">
            <summary>
            Determines a collision occured with the specified <see cref="T:TopDownShooter.Engine.IColliderComponent" />.
            </summary>
            <param name="other">The rigid body to check for a collision.</param>
            <returns>TTrue if a collision occured, false otherwise.</returns>
        </member>
        <member name="T:TopDownShooter.Engine.IComponent">
            <summary>
            Defines an interface for components.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.IComponent.ReceiveMessage(TopDownShooter.Engine.IGameObject,System.Object)">
            <summary>
            Receives a message.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="message">The message object.</param>
        </member>
        <member name="M:TopDownShooter.Engine.IComponent.Update(TopDownShooter.Engine.IGameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object to update.</param>
            <param name="time">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.IComponent.Draw(TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.ISpriteBatchAdapter,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="spriteBatch">The sprite batch adapter.</param>
            <param name="time">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.IComponent.LoadContent(TopDownShooter.Engine.IContentManagerAdapter)">
            <summary>
            Loads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.IComponent.UnloadContent(TopDownShooter.Engine.IContentManagerAdapter)">
            <summary>
            Unloads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="T:TopDownShooter.Engine.FrameProperties">
            <summary>
            Defines a structure for the frame properties of an <see cref="T:TopDownShooter.Engine.AnimationComponent" />.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.FrameProperties.#ctor(System.Int32,System.Int32,System.TimeSpan,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.FrameProperties"/> struct.
            </summary>
            <param name="width">The width of a frame.</param>
            <param name="height">The height of a frame.</param>
            <param name="duration">The duration of a frame.</param>
            <param name="count">The number of frames in an <see cref="T:TopDownShooter.Engine.AnimationComponent" />.</param>
        </member>
        <member name="P:TopDownShooter.Engine.FrameProperties.Count">
            <summary>
            Gets the number of frames in an <see cref="T:TopDownShooter.Engine.AnimationComponent" />.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.FrameProperties.Duration">
            <summary>
            Gets the duration of a frame.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.FrameProperties.Height">
            <summary>
            Gets the height of a frame.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.FrameProperties.Width">
            <summary>
            Gets the width of a frame.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.GameObject">
            <summary>
            Defines an entity.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.GameObject.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.GameObject" /> class.
            </summary>
            <param name="id">The game object identifier.</param>
        </member>
        <member name="M:TopDownShooter.Engine.GameObject.#ctor(System.Int32,System.Collections.Generic.IEnumerable{TopDownShooter.Engine.IComponent})">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.GameObject" /> class.
            </summary>
            <param name="id">The game object identifier.</param>
            <param name="components">The collection of components.</param>
        </member>
        <member name="P:TopDownShooter.Engine.GameObject.Bounds">
            <summary>
            Gets the bounds of the game object.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.GameObject.Components">
            <summary>
            Gets the collection of components.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.GameObject.Id">
            <summary>
            Gets the identifier for this game object.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.GameObject.Position">
            <summary>
            Gets or sets the position of the entity.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.GameObject.ProjectedPosition">
            <summary>
            Gets the projected position, based off the <see cref="P:TopDownShooter.Engine.IGameObject.Position"/> and the <see cref="P:TopDownShooter.Engine.IGameObject.Velocity"/>.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.GameObject.ProjectedBounds">
            <summary>
            Gets the projected bounds, based off the <see cref="P:TopDownShooter.Engine.IGameObject.Position"/> and the <see cref="P:TopDownShooter.Engine.IGameObject.Velocity"/>.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.GameObject.Width">
            <summary>
            Gets the width of the game object.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.GameObject.Height">
            <summary>
            Gets the height of the game object.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.GameObject.Velocity">
            <summary>
            Gets or sets the velocity of the entity.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.GameObject.Draw(TopDownShooter.Engine.ISpriteBatchAdapter,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the game object with the specified sprite batch adapter and game time.
            </summary>
            <param name="spriteBatch">The sprite batch adapter.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.GameObject.Initialize">
            <summary>
            Initializes the game object.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.GameObject.LoadContent(TopDownShooter.Engine.IContentManagerAdapter)">
            <summary>
            Loads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.GameObject.UnloadContent(TopDownShooter.Engine.IContentManagerAdapter)">
            <summary>
            Unloads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.GameObject.BroadcastMessage(System.Object)">
            <summary>
            Broadcasts a message to all components.
            </summary>
            <param name="message">The message to broadcast.</param>
        </member>
        <member name="M:TopDownShooter.Engine.GameObject.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the game object with the specified game time.
            </summary>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="T:TopDownShooter.Engine.ICamera">
            <summary>
            Defines an interface for a camera.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.ICamera.Bounds">
            <summary>
            Gets or sets the bounds.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.ICamera.Position">
            <summary>
            Gets or sets the position.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.ICamera.Rotation">
            <summary>
            Gets or sets the rotation.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.ICamera.TransformMatrix">
            <summary>
            Gets the transform matrix.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.ICamera.Zoom">
            <summary>
            Gets or sets the zoom.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.IContentManagerAdapter">
            <summary>
            Defines an interface for adapting <see cref="T:Microsoft.Xna.Framework.Content.ContentManager" />.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.IContentManagerAdapter.Load``1(System.String)">
            <summary>
            Loads an asset from the specified asset name.
            </summary>
            <typeparam name="T">The type of the asset to load.</typeparam>
            <param name="assetName">The asset name.</param>
            <returns>The loaded asset.</returns>
        </member>
        <member name="T:TopDownShooter.Engine.IGameObject">
            <summary>
            Defines an interface for a game object.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IGameObject.Position">
            <summary>
            Gets or sets the position of the game object.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IGameObject.ProjectedPosition">
            <summary>
            Gets the projected position, based off the <see cref="P:TopDownShooter.Engine.IGameObject.Position"/> and the <see cref="P:TopDownShooter.Engine.IGameObject.Velocity"/>.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IGameObject.ProjectedBounds">
            <summary>
            Gets the projected bounds, based off the <see cref="P:TopDownShooter.Engine.IGameObject.Position"/> and the <see cref="P:TopDownShooter.Engine.IGameObject.Velocity"/>.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IGameObject.Width">
            <summary>
            Gets the width of the game object.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IGameObject.Height">
            <summary>
            Gets the height of the game object.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IGameObject.Velocity">
            <summary>
            Gets or sets the velocity of the game object.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IGameObject.Components">
            <summary>
            Gets the collection of components.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IGameObject.Bounds">
            <summary>
            Gets the bounds of the game object.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.IGameObject.Id">
            <summary>
            Gets the identifier for this game object.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.IGameObject.BroadcastMessage(System.Object)">
            <summary>
            Broadcasts a message to all components.
            </summary>
            <param name="message">The message to broadcast.</param>
        </member>
        <member name="M:TopDownShooter.Engine.IGameObject.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the game object with the specified game time.
            </summary>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.IGameObject.Draw(TopDownShooter.Engine.ISpriteBatchAdapter,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the game object with the specified sprite batch adapter and game time.
            </summary>
            <param name="spriteBatch">The sprite batch adapter.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.IGameObject.LoadContent(TopDownShooter.Engine.IContentManagerAdapter)">
            <summary>
            Loads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.IGameObject.UnloadContent(TopDownShooter.Engine.IContentManagerAdapter)">
            <summary>
            Unloads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.IGameObject.Initialize">
            <summary>
            Initializes the game object.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.ICollisionSystem">
            <summary>
            Defines an interface for providing game object lookups.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.ICollisionSystem.Colliders">
            <summary>
            Gets the collection of <see cref="T:TopDownShooter.Engine.IColliderComponent" /> objects registered with this <see cref="T:TopDownShooter.Engine.ICollisionSystem" />.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.ICollisionSystem.GameObjects">
            <summary>
            Gets the collection of <see cref="T:TopDownShooter.Engine.IGameObject" /> objects registered with this <see cref="T:TopDownShooter.Engine.ICollisionSystem" />.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.ICollisionSystem.CheckCollisions(TopDownShooter.Engine.IColliderComponent)">
            <summary>
            Checks the collisions for the specified <see cref="T:TopDownShooter.Engine.IColliderComponent" />.
            </summary>
            <param name="collider">The rigid body.</param>
        </member>
        <member name="M:TopDownShooter.Engine.ICollisionSystem.GetGameObject(System.Int32)">
            <summary>
            Gets the <see cref="T:TopDownShooter.Engine.IGameObject" /> with the specified identifer.
            </summary>
            <param name="id">Game object identifier.</param>
            <returns>The <see cref="T:TopDownShooter.Engine.IGameObject" />.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.ICollisionSystem.Register(System.Int32,TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.IColliderComponent)">
            <summary>
            Registers the specifieid <see cref="T:TopDownShooter.Engine.IGameObject" /> and <see cref="T:TopDownShooter.Engine.IColliderComponent" /> with the specified identifier.
            </summary>
            <param name="id">The identifier of the game object.</param>
            <param name="gameObject">The game object.</param>
            <param name="collider">The collider component.</param>
        </member>
        <member name="M:TopDownShooter.Engine.ICollisionSystem.Unregister(System.Int32)">
            <summary>
            Unregisters the game object and collider with the specified identifier.
            </summary>
            <param name="id">The identifier of the game object.</param>
        </member>
        <member name="T:TopDownShooter.Engine.IGameObjectFactory">
            <summary>
            Defines an interface for a game object factory.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.IGameObjectFactory.CreateBulletProjectile(System.Int32,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,TopDownShooter.Engine.ICollisionSystem)">
            <summary>
            Creates a bullet projectile game object.
            </summary>
            <param name="id">The game object identifier.</param>
            <param name="position">The position of the game object.</param>
            <param name="direction">The diretion of the bullet, as a unit vector.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.ICollisionSystem" />.</param>
            <returns>The created bullet projectile.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.IGameObjectFactory.CreateBulletProjectile(System.Int32,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,TopDownShooter.Engine.ICollisionSystem,System.Collections.Generic.IEnumerable{TopDownShooter.Engine.IComponent})">
            <summary>
            Creates a bullet projectile game object.
            </summary>
            <param name="id">The game object identifier.</param>
            <param name="position">The position of the game object.</param>
            <param name="direction">The diretion of the bullet, as a unit vector.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.ICollisionSystem" />.</param>
            <param name="components">The collection of components</param>
            <returns>The created bullet projectile.</returns>
        </member>
        <member name="T:TopDownShooter.Engine.IInputController">
            <summary>
            Simple Controller for requesting Movements
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.IInputController.Fire">
            <summary>
            Gets a value indicating whether a fire was requested.
            </summary>
            <returns>True if the action was requested; false otherwise.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.IInputController.MoveDown">
            <summary>
            Gets whether or not a up move was requested.
            </summary>
            <returns>True to move down.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.IInputController.MoveLeft">
            <summary>
            Gets whether or not a left move was requested.
            </summary>
            <returns>True to move left.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.IInputController.MoveRight">
            <summary>
            Gets whether or not a right move was requested.
            </summary>
            <returns>True to move right.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.IInputController.MoveUp">
            <summary>
            Gets whether or not a up move was requested.
            </summary>
            <returns>True to move up.</returns>
        </member>
        <member name="T:TopDownShooter.Engine.InputControllerComponentBase">
            <summary>
            Base implementation for an <see cref="T:TopDownShooter.Engine.IInputController"/>
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.InputControllerComponentBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.InputControllerComponentBase"/> class.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.InputControllerComponentBase.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:TopDownShooter.Engine.InputControllerComponentBase"/> class.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.InputControllerComponentBase.ReceiveMessage(TopDownShooter.Engine.IGameObject,System.Object)">
            <summary>
            Receives a message.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="message">The message object.</param>
        </member>
        <member name="M:TopDownShooter.Engine.InputControllerComponentBase.Update(TopDownShooter.Engine.IGameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object to update.</param>
            <param name="time">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.InputControllerComponentBase.Draw(TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.ISpriteBatchAdapter,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="spriteBatch">The sprite batch adapter.</param>
            <param name="time">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.InputControllerComponentBase.LoadContent(TopDownShooter.Engine.IContentManagerAdapter)">
            <summary>
            Loads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.InputControllerComponentBase.UnloadContent(TopDownShooter.Engine.IContentManagerAdapter)">
            <summary>
            Unloads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.InputControllerComponentBase.Fire">
            <summary>
            Gets a value indicating whether a fire was requested.
            </summary>
            <returns>True if the action was requested; false otherwise.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.InputControllerComponentBase.MoveDown">
            <summary>
            Gets whether or not a up move was requested.
            </summary>
            <returns>True to move down.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.InputControllerComponentBase.MoveLeft">
            <summary>
            Gets whether or not a left move was requested.
            </summary>
            <returns>True to move left.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.InputControllerComponentBase.MoveRight">
            <summary>
            Gets whether or not a right move was requested.
            </summary>
            <returns>True to move right.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.InputControllerComponentBase.MoveUp">
            <summary>
            Gets whether or not a up move was requested.
            </summary>
            <returns>True to move up.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.InputControllerComponentBase.Dispose">
            <summary>
            Cleans up any resources used during the execution of this class
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.InputControllerComponentBase.Dispose(System.Boolean)">
            <summary>
            Cleans up any resources used during the execution of this class
            </summary>
            <param name="disposing">Disposing or not?</param>
        </member>
        <member name="M:TopDownShooter.Engine.InputControllerComponentBase.ManagedDispose">
            <summary>
            Cleans up any managed resources during disposal
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.ISpriteBatchAdapter">
            <summary>
            Defines an interface for adapting <see cref="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" />.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.ISpriteBatchAdapter.GraphicsDevice">
            <summary>
            Gets the <see cref="P:TopDownShooter.Engine.ISpriteBatchAdapter.GraphicsDevice"/> associated with this
            <see cref="T:TopDownShooter.Engine.SpriteBatchAdapter"/>
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.ISpriteBatchAdapter.Begin(Microsoft.Xna.Framework.Graphics.SpriteSortMode,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Graphics.DepthStencilState,Microsoft.Xna.Framework.Graphics.RasterizerState,Microsoft.Xna.Framework.Graphics.Effect,System.Nullable{Microsoft.Xna.Framework.Matrix})">
            <summary>
            Begins a new sprite and text batch with the specified render state.
            </summary>
            <param name="sortMode">
            The drawing order for sprite and text drawing. <see cref="F:Microsoft.Xna.Framework.Graphics.SpriteSortMode.Deferred" /> by default.
            </param>
            <param name="blendState">
            State of the blending. Uses Microsoft.Xna.Framework.Graphics.BlendState.AlphaBlend if null.
            </param>
            <param name="samplerState">
            State of the sampler. Uses Microsoft.Xna.Framework.Graphics.SamplerState.LinearClamp if null.
            </param>
            <param name="depthStencilState">
            State of the depth-stencil buffer. Uses Microsoft.Xna.Framework.Graphics.DepthStencilState.None if null.
            </param>
            <param name="rasterizerState">
            State of the rasterization. Uses Microsoft.Xna.Framework.Graphics.RasterizerState.CullCounterClockwise if null.
            </param>
            <param name="effect">
            A custom Microsoft.Xna.Framework.Graphics.Effect to override the default sprite effect. Uses default sprite effect if null.
            </param>
            <param name="transformMatrix">
            An optional matrix used to transform the sprite geometry. Uses Microsoft.Xna.Framework.Matrix.Identity if null.
            </param>
        </member>
        <member name="M:TopDownShooter.Engine.ISpriteBatchAdapter.Draw(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Rectangle},Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)">
            <summary>
            Submit a sprite for drawing in the current batch.
            </summary>
            <param name="texture">A texture.</param>
            <param name="position">The drawing location on screen.</param>
            <param name="sourceRectangle">An optional region on the texture which will be rendered. If null - draws full texture.</param>
            <param name="color">A color mask.</param>
            <param name="rotation">The rotation of this sprite.</param>
            <param name="origin">Center of the rotation. 0,0 by default.</param>
            <param name="scale">A scaling of this sprite.</param>
            <param name="effects">Modifications for drawing. Can be combined.</param>
            <param name="layerDepth">A depth of the layer of this sprite.</param>
        </member>
        <member name="M:TopDownShooter.Engine.ISpriteBatchAdapter.Draw(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Submit a sprite for drawing in the current batch.
            </summary>
            <param name="texture">A texture.</param>
            <param name="position">The drawing location on screen.</param>
            <param name="color">A color mask.</param>
        </member>
        <member name="M:TopDownShooter.Engine.ISpriteBatchAdapter.Draw(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color)">
            <summary>
            Submit a sprite for drawing in the current batch.
            </summary>
            <param name="texture">A texture.</param>
            <param name="rectangle">The rectangle to use.</param>
            <param name="color">A color mask.</param>
        </member>
        <member name="M:TopDownShooter.Engine.ISpriteBatchAdapter.DrawString(Microsoft.Xna.Framework.Graphics.SpriteFont,System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Draws a string of text in the current batch.
            </summary>
            <param name="font">The <see cref="T:Microsoft.Xna.Framework.Graphics.SpriteFont"/> to use.</param>
            <param name="text">The text to render.</param>
            <param name="position">The position to render at.</param>
            <param name="color">The color to render the text.</param>
        </member>
        <member name="M:TopDownShooter.Engine.ISpriteBatchAdapter.End">
            <summary>
            Flushes all batched text and sprites to the screen.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.ITile">
            <summary>
            Defines an inteface for a tile.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.ITile.TileCoordinates">
            <summary>
            Gets the tile's position in tile coordinates.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.ITile.Texture">
            <summary>
            Gets the texture
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.ITile.TexturePosition">
            <summary>
            Gets the position of the tile in the tileset.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.Level">
            <summary>
            Defines a level.
            </summary>
        </member>
        <member name="F:TopDownShooter.Engine.Level.map">
            <summary>
            The <see cref="T:TiledSharp.TmxMap" />.
            </summary>
        </member>
        <member name="F:TopDownShooter.Engine.Level.tiles">
            <summary>
            The collection of tiles, mapped from tile coordinates.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Level.#ctor(System.Int32,TopDownShooter.Engine.ICollisionSystem,TiledSharp.TmxMap)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.Level" /> class.
            </summary>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.ICollisionSystem"/>.</param>
            <param name="map">
            The <see cref="T:TiledSharp.TmxMap" /> used to generate the level.
            </param>
            <param name="id">The game object identifier</param>
        </member>
        <member name="P:TopDownShooter.Engine.Level.Tiles">
            <summary>
            Gets the collection of <see cref="T:TopDownShooter.Engine.Tile" /> objects.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Level.Width">
            <summary>
            Gets the width of the game object.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Level.Height">
            <summary>
            Gets the height of the game object.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Level.Draw(TopDownShooter.Engine.ISpriteBatchAdapter,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the game object with the specified sprite batch adapter and game time.
            </summary>
            <param name="spriteBatch">The sprite batch adapter.</param>
            <param name="gameTime">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Level.GetTile(Microsoft.Xna.Framework.Point)">
            <summary>
            Gets the tile at the specified tile coordinates.
            </summary>
            <param name="point">The location of the tile, in tile coordinates.</param>
            <returns>The <see cref="T:TopDownShooter.Engine.Tile" />.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.Level.LoadContent(TopDownShooter.Engine.IContentManagerAdapter)">
            <summary>
            Loads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.Level.ImportLayer(TiledSharp.TmxLayer,System.Collections.Generic.Dictionary{TiledSharp.TmxTileset,Microsoft.Xna.Framework.Graphics.Texture2D})">
            <summary>
            Imports the tiles from the specified <see cref="T:TiledSharp.TmxLayer" /> using the specified textures.
            </summary>
            <param name="layer">The <see cref="T:TiledSharp.TmxLayer" /> to import from.</param>
            <param name="textures">The textures map that contains <see cref="T:TiledSharp.TmxTileset" /> to <see cref="T:Microsoft.Xna.Framework.Graphics.Texture2D" /> mappings.</param>
        </member>
        <member name="T:TopDownShooter.Engine.MessageType">
            <summary>
            Defines the message types used to communicate between <see cref="T:TopDownShooter.Engine.IComponent" /> objects.
            </summary>
        </member>
        <member name="F:TopDownShooter.Engine.MessageType.Fire">
            <summary>
            The fire message type.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.MovementComponent">
            <summary>
            Defines a movement component that applies velocity to a position.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.MovementComponent.Draw(TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.ISpriteBatchAdapter,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="spriteBatch">The sprite batch adapter.</param>
            <param name="time">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.MovementComponent.LoadContent(TopDownShooter.Engine.IContentManagerAdapter)">
            <summary>
            Loads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.MovementComponent.UnloadContent(TopDownShooter.Engine.IContentManagerAdapter)">
            <summary>
            Unloads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.MovementComponent.ReceiveMessage(TopDownShooter.Engine.IGameObject,System.Object)">
            <summary>
            Receives a message.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="message">The message object.</param>
        </member>
        <member name="M:TopDownShooter.Engine.MovementComponent.Update(TopDownShooter.Engine.IGameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object to update.</param>
            <param name="time">The game time.</param>
        </member>
        <member name="T:TopDownShooter.Engine.Player">
            <summary>
            Simple player class.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Player.#ctor(System.Int32,Microsoft.Xna.Framework.Vector2,TopDownShooter.Engine.ICollisionSystem,System.Collections.Generic.IEnumerable{TopDownShooter.Engine.IComponent})">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.Player" /> class.
            </summary>
            <param name="id">The game object identifier.</param>
            <param name="position">The position of the player.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.ICollisionSystem" />.</param>
            <param name="components">A collection of components.</param>
        </member>
        <member name="P:TopDownShooter.Engine.Player.Bounds">
            <summary>
            Gets the bounds offset via the size of the <see cref="P:TopDownShooter.Engine.AnimationComponent.FrameProperties"/>
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Player.ProjectedBounds">
            <summary>
            Gets the projected bounds, based off the <see cref="P:TopDownShooter.Engine.IGameObject.Position"/> and the <see cref="P:TopDownShooter.Engine.IGameObject.Velocity"/>.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Player.Width">
            <summary>
            Gets the width of the game object.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Player.Height">
            <summary>
            Gets the height of the game object.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.PlayerColliderComponent">
            <summary>
            Defines a collider component for player objects.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.PlayerColliderComponent.#ctor(System.Int32,TopDownShooter.Engine.ICollisionSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.PlayerColliderComponent" /> class.
            </summary>
            <param name="gameObjectId">The parent game object identifier.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.ICollisionSystem" />.</param>
        </member>
        <member name="M:TopDownShooter.Engine.PlayerColliderComponent.Collide(TopDownShooter.Engine.IColliderComponent)">
            <summary>
            Performs a collision with the specified <see cref="T:TopDownShooter.Engine.IColliderComponent" />.
            </summary>
            <param name="other">The other collider component.</param>
        </member>
        <member name="M:TopDownShooter.Engine.PlayerColliderComponent.Update(TopDownShooter.Engine.IGameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object to update.</param>
            <param name="time">The game time.</param>
        </member>
        <member name="T:TopDownShooter.Engine.ColliderComponentBase">
            <summary>
            Defines a rigid body component that will respond to collisions with other rigid bodies.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.ColliderComponentBase.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.ColliderComponentBase" /> class.
            </summary>
            <param name="gameObjectId">The parent game object identifier.</param>
        </member>
        <member name="P:TopDownShooter.Engine.ColliderComponentBase.GameObjectId">
            <summary>
            Gets the parent game object identifer.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.ColliderComponentBase.Draw(TopDownShooter.Engine.IGameObject,TopDownShooter.Engine.ISpriteBatchAdapter,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="spriteBatch">The sprite batch adapter.</param>
            <param name="time">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.ColliderComponentBase.LoadContent(TopDownShooter.Engine.IContentManagerAdapter)">
            <summary>
            Loads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.ColliderComponentBase.UnloadContent(TopDownShooter.Engine.IContentManagerAdapter)">
            <summary>
            Unloads the content from the specified content manager adapter.
            </summary>
            <param name="contentManager">The content manager adapter.</param>
        </member>
        <member name="M:TopDownShooter.Engine.ColliderComponentBase.ReceiveMessage(TopDownShooter.Engine.IGameObject,System.Object)">
            <summary>
            Receives a message.
            </summary>
            <param name="gameObject">The game object.</param>
            <param name="message">The message object.</param>
        </member>
        <member name="M:TopDownShooter.Engine.ColliderComponentBase.Update(TopDownShooter.Engine.IGameObject,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the component with the specified game object and game time.
            </summary>
            <param name="gameObject">The game object to update.</param>
            <param name="time">The game time.</param>
        </member>
        <member name="M:TopDownShooter.Engine.ColliderComponentBase.Collide(TopDownShooter.Engine.IColliderComponent)">
            <summary>
            Performs a collision with the specified <see cref="T:TopDownShooter.Engine.IColliderComponent" />.
            </summary>
            <param name="other">The other collider component.</param>
        </member>
        <member name="M:TopDownShooter.Engine.ColliderComponentBase.IsCollision(TopDownShooter.Engine.IColliderComponent)">
            <summary>
            Determines a collision occured with the specified <see cref="T:TopDownShooter.Engine.IColliderComponent" />.
            </summary>
            <param name="other">The rigid body to check for a collision.</param>
            <returns>TTrue if a collision occured, false otherwise.</returns>
        </member>
        <member name="T:TopDownShooter.Engine.SimpleAiInputControllerComponent">
            <summary>
            Controller for controlling a simple AI.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.SimpleAiInputControllerComponent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.SimpleAiInputControllerComponent"/> class.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.SimpleAiInputControllerComponent.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:TopDownShooter.Engine.SimpleAiInputControllerComponent"/> class.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.SimpleAiInputControllerComponent.Fire">
            <summary>
            Gets a value indicating whether a fire was requested.
            </summary>
            <returns>True if the action was requested; false otherwise.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.SimpleAiInputControllerComponent.MoveDown">
            <summary>
            Gets whether or not a up move was requested.
            </summary>
            <returns>True to move down.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.SimpleAiInputControllerComponent.MoveLeft">
            <summary>
            Gets whether or not a left move was requested.
            </summary>
            <returns>True to move left.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.SimpleAiInputControllerComponent.MoveRight">
            <summary>
            Gets whether or not a right move was requested.
            </summary>
            <returns>True to move right.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.SimpleAiInputControllerComponent.MoveUp">
            <summary>
            Gets whether or not a up move was requested.
            </summary>
            <returns>True to move up.</returns>
        </member>
        <member name="M:TopDownShooter.Engine.SimpleAiInputControllerComponent.ManagedDispose">
            <summary>
            Cleans up any resources allocated during execution
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.SimpleAiInputControllerComponent.Initalize">
            <summary>
            Initalizes our tasks for movement changes
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.SimpleAiInputControllerComponent.SleepRandomly">
            <summary>
            Sleeps a random amount of time between 0 and 1.5 seconds.
            </summary>
            <remarks>No one will get passed this sweet ai!</remarks>
        </member>
        <member name="T:TopDownShooter.Engine.SimpleColliderComponent">
            <summary>
            Provides a simple collider component that does bounds checking for collision detection.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.SimpleColliderComponent.#ctor(System.Int32,TopDownShooter.Engine.ICollisionSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.SimpleColliderComponent" /> class.
            </summary>
            <param name="gameObjectId">The parent game object identifier.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.ICollisionSystem" />.</param>
        </member>
        <member name="P:TopDownShooter.Engine.SimpleColliderComponent.CollisionSystem">
            <summary>
            Gets the <see cref="T:TopDownShooter.Engine.ICollisionSystem" />.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.SimpleColliderComponent.Collide(TopDownShooter.Engine.IColliderComponent)">
            <summary>
            Performs a collision with the specified <see cref="T:TopDownShooter.Engine.IColliderComponent" />.
            </summary>
            <param name="other">The other collider component.</param>
        </member>
        <member name="M:TopDownShooter.Engine.SimpleColliderComponent.IsCollision(TopDownShooter.Engine.IColliderComponent)">
            <summary>
            Determines a collision occured with the specified <see cref="T:TopDownShooter.Engine.IColliderComponent" />.
            </summary>
            <param name="other">The rigid body to check for a collision.</param>
            <returns>TTrue if a collision occured, false otherwise.</returns>
        </member>
        <member name="T:TopDownShooter.Engine.SpriteBatchAdapter">
            <summary>
            Defines an adapter for <see cref="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" />.
            </summary>
        </member>
        <member name="F:TopDownShooter.Engine.SpriteBatchAdapter.spriteBatch">
            <summary>
            The <see cref="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" />.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.SpriteBatchAdapter.#ctor(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.SpriteBatchAdapter" /> class.
            </summary>
            <param name="spriteBatch">
            The sprite batch being adapted.
            </param>
        </member>
        <member name="P:TopDownShooter.Engine.SpriteBatchAdapter.GraphicsDevice">
            <summary>
            Gets the <see cref="P:TopDownShooter.Engine.SpriteBatchAdapter.GraphicsDevice"/> associated with this
            <see cref="T:TopDownShooter.Engine.SpriteBatchAdapter"/>
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.SpriteBatchAdapter.Begin(Microsoft.Xna.Framework.Graphics.SpriteSortMode,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Graphics.DepthStencilState,Microsoft.Xna.Framework.Graphics.RasterizerState,Microsoft.Xna.Framework.Graphics.Effect,System.Nullable{Microsoft.Xna.Framework.Matrix})">
            <summary>
            Begins a new sprite and text batch with the specified render state.
            </summary>
            <param name="sortMode">
            The drawing order for sprite and text drawing. <see cref="F:Microsoft.Xna.Framework.Graphics.SpriteSortMode.Deferred" /> by default.
            </param>
            <param name="blendState">
            State of the blending. Uses Microsoft.Xna.Framework.Graphics.BlendState.AlphaBlend if null.
            </param>
            <param name="samplerState">
            State of the sampler. Uses Microsoft.Xna.Framework.Graphics.SamplerState.LinearClamp if null.
            </param>
            <param name="depthStencilState">
            State of the depth-stencil buffer. Uses Microsoft.Xna.Framework.Graphics.DepthStencilState.None if null.
            </param>
            <param name="rasterizerState">
            State of the rasterization. Uses Microsoft.Xna.Framework.Graphics.RasterizerState.CullCounterClockwise if null.
            </param>
            <param name="effect">
            A custom Microsoft.Xna.Framework.Graphics.Effect to override the default sprite effect. Uses default sprite effect if null.
            </param>
            <param name="transformMatrix">
            An optional matrix used to transform the sprite geometry. Uses Microsoft.Xna.Framework.Matrix.Identity if null.
            </param>
        </member>
        <member name="M:TopDownShooter.Engine.SpriteBatchAdapter.Draw(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Submit a sprite for drawing in the current batch.
            </summary>
            <param name="texture">A texture.</param>
            <param name="position">The drawing location on screen.</param>
            <param name="color">A color mask.</param>
        </member>
        <member name="M:TopDownShooter.Engine.SpriteBatchAdapter.Draw(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color)">
            <summary>
            Submit a sprite for drawing in the current batch.
            </summary>
            <param name="texture">A texture.</param>
            <param name="rectangle">The rectangle to use.</param>
            <param name="color">A color mask.</param>
        </member>
        <member name="M:TopDownShooter.Engine.SpriteBatchAdapter.DrawString(Microsoft.Xna.Framework.Graphics.SpriteFont,System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Draws a string of text in the current batch.
            </summary>
            <param name="font">The <see cref="T:Microsoft.Xna.Framework.Graphics.SpriteFont"/> to use.</param>
            <param name="text">The text to render.</param>
            <param name="position">The position to render at.</param>
            <param name="color">The color to render the text.</param>
        </member>
        <member name="M:TopDownShooter.Engine.SpriteBatchAdapter.Draw(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Rectangle},Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)">
            <summary>
            Submit a sprite for drawing in the current batch.
            </summary>
            <param name="texture">A texture.</param>
            <param name="position">The drawing location on screen.</param>
            <param name="sourceRectangle">An optional region on the texture which will be rendered. If null - draws full texture.</param>
            <param name="color">A color mask.</param>
            <param name="rotation">The rotation of this sprite.</param>
            <param name="origin">Center of the rotation. 0,0 by default.</param>
            <param name="scale">A scaling of this sprite.</param>
            <param name="effects">Modifications for drawing. Can be combined.</param>
            <param name="layerDepth">A depth of the layer of this sprite.</param>
        </member>
        <member name="M:TopDownShooter.Engine.SpriteBatchAdapter.End">
            <summary>
            Flushes all batched text and sprites to the screen.
            </summary>
        </member>
        <member name="T:TopDownShooter.Engine.Tile">
            <summary>
            Defines a tile.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Tile.#ctor(System.Int32,TopDownShooter.Engine.ICollisionSystem,TopDownShooter.Engine.TileInteractionType,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Point,System.Int32,System.Int32,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Engine.Tile" /> class.
            </summary>
            <param name="id">The game object identifier.</param>
            <param name="collisionSystem">The <see cref="T:TopDownShooter.Engine.ICollisionSystem"/>.</param>
            <param name="tileInteractionType">The <see cref="P:TopDownShooter.Engine.Tile.TileInteractionType" />.</param>
            <param name="texture">The <see cref="T:Microsoft.Xna.Framework.Graphics.Texture2D" />.</param>
            <param name="position">The position of the tile.</param>
            <param name="tileCoordinates">The tile's position in tile coordinates.</param>
            <param name="width">The width of the tile.</param>
            <param name="height">The height of the tile.</param>
            <param name="texturePosition">The texture's position in the tile set.</param>
        </member>
        <member name="P:TopDownShooter.Engine.Tile.Height">
            <summary>
            Gets the height.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Tile.Texture">
            <summary>
            Gets the texture
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Tile.TexturePosition">
            <summary>
            Gets the position of the tile in the tileset.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Tile.TileCoordinates">
            <summary>
            Gets or sets the tile's position in tile coordinates.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Tile.Width">
            <summary>
            Gets the width.
            </summary>
        </member>
        <member name="P:TopDownShooter.Engine.Tile.TileInteractionType">
            <summary>
            Gets the <see cref="P:TopDownShooter.Engine.Tile.TileInteractionType" />.
            </summary>
        </member>
        <member name="M:TopDownShooter.Engine.Tile.Draw(TopDownShooter.Engine.ISpriteBatchAdapter,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws this <see cref="T:TopDownShooter.Engine.Tile" />.
            </summary>
            <param name="spriteBatch">
            The <see cref="T:TopDownShooter.Engine.ISpriteBatchAdapter" />.
            </param>
            <param name="gameTime">
            The game time.
            </param>
        </member>
        <member name="T:TopDownShooter.Engine.TileInteractionType">
            <summary>
            Defines the tile interaction types.
            </summary>
        </member>
        <member name="F:TopDownShooter.Engine.TileInteractionType.NonBlocking">
            <summary>
            A non-blocking tile.
            </summary>
        </member>
        <member name="F:TopDownShooter.Engine.TileInteractionType.Blocking">
            <summary>
            A blocking tile.
            </summary>
        </member>
    </members>
</doc>
