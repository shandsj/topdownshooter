<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TopDownShooter</name>
    </assembly>
    <members>
        <member name="T:TopDownShooter.Game1">
            <summary>
            This is the main type for your game.
            </summary>
        </member>
        <member name="F:TopDownShooter.Game1.animation">
            <summary>
            A simple test animation
            </summary>
        </member>
        <member name="F:TopDownShooter.Game1.camera">
            <summary>
            The <see cref="T:TopDownShooter.Engine.ICamera"/>.
            </summary>
        </member>
        <member name="F:TopDownShooter.Game1.contentManager">
            <summary>
            The <see cref="T:TopDownShooter.Engine.IContentManagerAdapter" />.
            </summary>
        </member>
        <member name="F:TopDownShooter.Game1.graphics">
            <summary>
            The <see cref="T:Microsoft.Xna.Framework.GraphicsDeviceManager" />.
            </summary>
        </member>
        <member name="F:TopDownShooter.Game1.level">
            <summary>
            The <see cref="T:TopDownShooter.Engine.Level" />.
            </summary>
        </member>
        <member name="F:TopDownShooter.Game1.spriteBatch">
            <summary>
            The default <see cref="T:TopDownShooter.Engine.ISpriteBatchAdapter" />.
            </summary>
        </member>
        <member name="M:TopDownShooter.Game1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Game1" /> class.
            </summary>
        </member>
        <member name="M:TopDownShooter.Game1.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            This is called when the game should draw itself.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="M:TopDownShooter.Game1.Initialize">
            <summary>
            Allows the game to perform any initialization it needs to before starting to run.
            This is where it can query for any required services and load any non-graphic
            related content.  Calling base.Initialize will enumerate through any components
            and initialize them as well.
            </summary>
        </member>
        <member name="M:TopDownShooter.Game1.LoadContent">
            <summary>
            LoadContent will be called once per game and is the place to load
            all of your content.
            </summary>
        </member>
        <member name="M:TopDownShooter.Game1.UnloadContent">
            <summary>
            UnloadContent will be called once per game and is the place to unload
            game-specific content.
            </summary>
        </member>
        <member name="M:TopDownShooter.Game1.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Allows the game to run logic such as updating the world,
            checking for collisions, gathering input, and playing audio.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="T:TopDownShooter.HumanInputController">
            <summary>
            Herds Inputs...
            </summary>
        </member>
        <member name="M:TopDownShooter.HumanInputController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.HumanInputController"/> class.
            Creates a new <see cref="T:TopDownShooter.HumanInputController" /> that can be used to have a simple Composite for managing
            inputs among multiple devices.
            </summary>
        </member>
        <member name="M:TopDownShooter.HumanInputController.MoveDown">
            <summary>
            Gets whether or not a up move was requested.
            </summary>
            <returns>True to move down.</returns>
        </member>
        <member name="M:TopDownShooter.HumanInputController.MoveLeft">
            <summary>
            Gets whether or not a left move was requested.
            </summary>
            <returns>True to move left.</returns>
        </member>
        <member name="M:TopDownShooter.HumanInputController.MoveRight">
            <summary>
            Gets whether or not a right move was requested.
            </summary>
            <returns>True to move right.</returns>
        </member>
        <member name="M:TopDownShooter.HumanInputController.MoveUp">
            <summary>
            Gets whether or not a up move was requested.
            </summary>
            <returns>True to move up.</returns>
        </member>
        <member name="M:TopDownShooter.HumanInputController.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates based on the current gametime.
            </summary>
            <param name="gameTime">The current gametime.</param>
        </member>
        <member name="T:TopDownShooter.Player">
            <summary>
            Simple player class.
            </summary>
        </member>
        <member name="F:TopDownShooter.Player.playerSpeed">
            <summary>
            Fixed speed for now.
            </summary>
        </member>
        <member name="M:TopDownShooter.Player.#ctor(TopDownShooter.Engine.IInputController)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Player"/> class.
            </summary>
            <param name="inputController">The <see cref="T:TopDownShooter.Engine.IInputController"/> that
            controls this player</param>
        </member>
        <member name="P:TopDownShooter.Player.Height">
            <summary>
            Gets the current height.
            </summary>
        </member>
        <member name="P:TopDownShooter.Player.IsMoving">
            <summary>
            Gets or sets a value indicating whether simple indicator used to toggle when to start/stop
            the animation.
            </summary>
        </member>
        <member name="P:TopDownShooter.Player.PlayerAnimation">
            <summary>
            Gets or sets gets the <see cref="T:TopDownShooter.Engine.Animation" /> associated with this <see cref="T:TopDownShooter.Player" />
            </summary>
        </member>
        <member name="P:TopDownShooter.Player.PlayerSpeed">
            <summary>
            Gets the player speed.
            </summary>
            <remarks>Currently fixed.</remarks>
        </member>
        <member name="P:TopDownShooter.Player.Position">
            <summary>
            Gets gets or sets the current <see cref="T:Microsoft.Xna.Framework.Vector2" /> position.
            </summary>
        </member>
        <member name="P:TopDownShooter.Player.Width">
            <summary>
            Gets the current Width.
            </summary>
        </member>
        <member name="M:TopDownShooter.Player.Draw(TopDownShooter.Engine.ISpriteBatchAdapter,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws this <see cref="T:TopDownShooter.Engine.Animation" />.
            </summary>
            <param name="spriteBatch">
            The <see cref="T:Microsoft.Xna.Framework.Graphics.SpriteBatch" />.
            </param>
            <param name="gameTime">
            The game time.
            </param>
        </member>
        <member name="M:TopDownShooter.Player.Initialize(TopDownShooter.Engine.Animation,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Allows the game to perform any initialization it needs to before starting to run.
            This is where it can query for any required services and load any non-graphic
            related content.  Calling base.Initialize will enumerate through any components
            and initialize them as well.
            </summary>
            <param name="playerAnimation">Animation that contains the different animations for this <see cref="T:TopDownShooter.Player"/></param>
            <param name="initialPosition">Initial starting position for this <see cref="T:TopDownShooter.Player"/></param>
        </member>
        <member name="M:TopDownShooter.Player.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Allows the game to run logic such as updating the world,
            checking for collisions, gathering input, and playing audio.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="T:TopDownShooter.Program">
            <summary>
            The main class.
            </summary>
        </member>
        <member name="M:TopDownShooter.Program.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
    </members>
</doc>
