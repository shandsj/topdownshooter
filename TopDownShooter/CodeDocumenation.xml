<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TopDownShooter</name>
    </assembly>
    <members>
        <member name="T:TopDownShooter.Game1">
            <summary>
            This is the main type for your game.
            </summary>
        </member>
        <member name="F:TopDownShooter.Game1.camera">
            <summary>
            The <see cref="T:TopDownShooter.Engine.ICamera"/>.
            </summary>
        </member>
        <member name="F:TopDownShooter.Game1.contentManager">
            <summary>
            The <see cref="T:TopDownShooter.Engine.IContentManagerAdapter" />.
            </summary>
        </member>
        <member name="F:TopDownShooter.Game1.graphics">
            <summary>
            The <see cref="T:Microsoft.Xna.Framework.GraphicsDeviceManager" />.
            </summary>
        </member>
        <member name="F:TopDownShooter.Game1.level">
            <summary>
            The <see cref="T:TopDownShooter.Engine.Level" />.
            </summary>
        </member>
        <member name="F:TopDownShooter.Game1.spriteBatch">
            <summary>
            The default <see cref="T:TopDownShooter.Engine.ISpriteBatchAdapter" />.
            </summary>
        </member>
        <member name="M:TopDownShooter.Game1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Game1" /> class.
            </summary>
        </member>
        <member name="M:TopDownShooter.Game1.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            This is called when the game should draw itself.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="M:TopDownShooter.Game1.Initialize">
            <summary>
            Allows the game to perform any initialization it needs to before starting to run.
            This is where it can query for any required services and load any non-graphic
            related content.  Calling base.Initialize will enumerate through any components
            and initialize them as well.
            </summary>
        </member>
        <member name="M:TopDownShooter.Game1.LoadContent">
            <summary>
            LoadContent will be called once per game and is the place to load
            all of your content.
            </summary>
        </member>
        <member name="M:TopDownShooter.Game1.UnloadContent">
            <summary>
            UnloadContent will be called once per game and is the place to unload
            game-specific content.
            </summary>
        </member>
        <member name="M:TopDownShooter.Game1.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Allows the game to run logic such as updating the world,
            checking for collisions, gathering input, and playing audio.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="T:TopDownShooter.HumanInputController">
            <summary>
            Herds Inputs...
            </summary>
        </member>
        <member name="M:TopDownShooter.HumanInputController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.HumanInputController"/> class.
            Creates a new <see cref="T:TopDownShooter.HumanInputController" /> that can be used to have a simple Composite for managing
            inputs among multiple devices.
            </summary>
        </member>
        <member name="M:TopDownShooter.HumanInputController.MoveDown">
            <summary>
            Gets whether or not a up move was requested.
            </summary>
            <returns>True to move down.</returns>
        </member>
        <member name="M:TopDownShooter.HumanInputController.MoveLeft">
            <summary>
            Gets whether or not a left move was requested.
            </summary>
            <returns>True to move left.</returns>
        </member>
        <member name="M:TopDownShooter.HumanInputController.MoveRight">
            <summary>
            Gets whether or not a right move was requested.
            </summary>
            <returns>True to move right.</returns>
        </member>
        <member name="M:TopDownShooter.HumanInputController.MoveUp">
            <summary>
            Gets whether or not a up move was requested.
            </summary>
            <returns>True to move up.</returns>
        </member>
        <member name="M:TopDownShooter.HumanInputController.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates based on the current gametime.
            </summary>
            <param name="gameTime">The current gametime.</param>
        </member>
        <member name="T:TopDownShooter.Player">
            <summary>
            Simple player class.
            </summary>
        </member>
        <member name="M:TopDownShooter.Player.#ctor(TopDownShooter.Engine.IInputController)">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Player"/> class.
            </summary>
        </member>
        <member name="M:TopDownShooter.Player.#ctor(Microsoft.Xna.Framework.Vector2,System.Collections.Generic.IEnumerable{TopDownShooter.Engine.IComponent})">
            <summary>
            Initializes a new instance of the <see cref="T:TopDownShooter.Player"/> class.
            </summary>
            <param name="position">The position of the player.</param>
            <param name="components">A collection of components.</param>
            <remarks>Internal for unit testing.</remarks>
        </member>
        <member name="M:TopDownShooter.Player.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Allows the game to run logic such as updating the world,
            checking for collisions, gathering input, and playing audio.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="T:TopDownShooter.Program">
            <summary>
            The main class.
            </summary>
        </member>
        <member name="M:TopDownShooter.Program.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
    </members>
</doc>
